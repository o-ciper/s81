{"version":3,"sources":["components/ScoreCell/ScoreCell.js","components/Broom/Broom.js","components/ScoreRow/ScoreRow.js","components/Trash/Trash.js","components/Plus/Plus.js","components/PlusSquare/PlusSquare.js","components/Medal/Medal.js","components/Scores/Scores.js","components/App.js","index.js"],"names":["ScoreCell","props","className","player","type","name","i","j","id","hand","value","score","onChange","handleRowScores","onBlur","handleCellOnBlur","parseInt","Broom","focusable","role","xmlns","viewBox","fill","d","ScoreRow","row_scores","map","index","allScores","Trash","Plus","PlusSquare","Medal","Scores","currPlayer1","JSON","parse","localStorage","getItem","useState","player1","setPlayer1","currPlayer2","player2","setPlayer2","currPlayer3","player3","setPlayer3","currPlayer4","player4","setPlayer4","currAllScores","setAllScores","currAllIndicators","allIndicators","setAllIndicators","currAllPenalties","allPenalties","setAllPenalties","currHandNum","handNum","setHandNum","currHandStorage","suit","normalWinnerPlayerDecrement","normalOpponentMultiplyer","opponentMultiplyer","kafaWinnerPlayerDecrement","kafaOpponentMultiplyer","color","scores","indicators","penalties","currHand","setCurrHand","currTotalScores","totalScores","setTotalScores","currLeaderBoard","leaderBoard","setLeaderBoard","useEffect","setItem","stringify","player1TotalScore","forEach","_scores","_indicators","_penalties","player2TotalScore","player3TotalScore","player4TotalScore","sortedTotalScores","sort","a","b","isAllX","someStr","splStr","split","length","toLowerCase","handleCurrScores","e","isNaN","target","str","count","xCount","isAllDash","dashCount","dataset","includes","tempCurrHand","toUpperCase","handleCurrIndicator","handleCurrPenalties","indexOf","tempAllScores","mapPlaces","placeNum","place","placeholder","el","selectedIndex","style","onClick","tempScores","prevScores","prevIndicators","prevPenalties","indicator","checked","penalty","prevCurrHand","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10d04cf9.chunk.js","sourcesContent":["import React from 'react'\n\nimport \"./ScoreCell.css\"\n\nexport default function ScoreCell(props) {\n  return (\n      <td\n        // className={`player${props.player} ${(parseInt(props.score) < 0) ? \"curr-hand-winner\" : \"\"}`}\n        className={`player${props.player} score-cell`}\n      >\n        <input\n          type=\"text\"\n          // min=\"0\"\n          // inputMode=\"numeric\"\n          // pattern=\"[0-9]*\"\n          name=\"\"\n          data-i={props.i}\n          data-j={props.j}\n          id={`player${props.player}-hand${props.hand}-score`}\n          value={props.score}\n          onChange={props.handleRowScores}\n          onBlur={props.handleCellOnBlur}\n          className={(parseInt(props.score) < 0) ? \"curr-hand-winner\" : \"\"}\n        />\n      </td>\n  )\n}\n","import React from 'react';\nimport \"./Broom.css\";\n\nconst Broom = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"broom\" className=\"svg-inline--fa fa-broom fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\n      <path fill=\"currentColor\" d=\"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"></path>\n    </svg>\n  )\n}\n\nexport default Broom;","import React from 'react';\nimport ScoreCell from '../ScoreCell/ScoreCell';\n\nimport Broom from '../Broom/Broom';\n\nimport \"./ScoreRow.css\";\n\nexport default function ScoreRow(props) {\n  return (\n    <tr className=\"score-row\">\n      <td>\n        <div className=\"hand\">\n          {props.hand}\n        </div>\n      </td>\n      {props.row_scores.map((score, index) =>\n          <ScoreCell\n            key={index}\n            score={score}\n            player={index + 1}\n            index={index}\n            hand={props.hand}\n            allScores={props.allScores}\n            i={props.i}\n            j={index}\n            handleRowScores={props.handleRowScores}\n            handleCellOnBlur={props.handleCellOnBlur}\n          />\n      )}\n      <td>\n          <button className=\"btn btn-delete-row\">\n              <Broom />\n          </button>\n      </td>\n    </tr>\n  )\n}\n","import React from 'react'\n\nimport \"./Trash.css\";\n\nconst Trash = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"trash-alt\" className=\"svg-inline--fa fa-trash-alt fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n      <path fill=\"currentColor\" d=\"M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z\"></path>\n    </svg>\n  )\n}\n\nexport default Trash;\n","import React from 'react';\nimport \"./Plus.css\";\n\nconst Plus = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"plus\" className=\"svg-inline--fa fa-plus fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n      <path fill=\"currentColor\" d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"></path>\n    </svg>\n  )\n}\n\nexport default Plus;","import React from 'react';\nimport \"./PlusSquare.css\";\n\nconst PlusSquare = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"plus-square\" className=\"svg-inline--fa fa-plus-square fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n      <path fill=\"currentColor\" d=\"M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"></path>\n    </svg>\n  )\n}\n\nexport default PlusSquare;","import React from \"react\";\nimport \"./Medal.css\";\n\nconst Medal = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"medal\" className=\"svg-inline--fa fa-medal fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <path fill=\"currentColor\" d=\"M223.75 130.75L154.62 15.54A31.997 31.997 0 0 0 127.18 0H16.03C3.08 0-4.5 14.57 2.92 25.18l111.27 158.96c29.72-27.77 67.52-46.83 109.56-53.39zM495.97 0H384.82c-11.24 0-21.66 5.9-27.44 15.54l-69.13 115.21c42.04 6.56 79.84 25.62 109.56 53.38L509.08 25.18C516.5 14.57 508.92 0 495.97 0zM256 160c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm92.52 157.26l-37.93 36.96 8.97 52.22c1.6 9.36-8.26 16.51-16.65 12.09L256 393.88l-46.9 24.65c-8.4 4.45-18.25-2.74-16.65-12.09l8.97-52.22-37.93-36.96c-6.82-6.64-3.05-18.23 6.35-19.59l52.43-7.64 23.43-47.52c2.11-4.28 6.19-6.39 10.28-6.39 4.11 0 8.22 2.14 10.33 6.39l23.43 47.52 52.43 7.64c9.4 1.36 13.17 12.95 6.35 19.59z\"></path>\n    </svg>\n  );\n}\n\nexport default Medal;","import React, {useEffect, useState} from \"react\";\n\nimport \"./Scores.css\";\n\nimport ScoreRow from \"../ScoreRow/ScoreRow\";\nimport Trash from \"../Trash/Trash\";\n// import ChevronDown from \"../Chevron-Down/ChevronDown\";\nimport Broom from \"../Broom/Broom\";\nimport Plus from \"../Plus/Plus\";\nimport PlusSquare from \"../PlusSquare/PlusSquare\";\n// import Trophy from \"../Trophy/Trophy\";\nimport Medal from \"../Medal/Medal\";\n// import Clubs from \"../Clubs/Clubs\";\n// import Diamonds from \"../Diamonds/Diamonds\";\n// import Hearts from \"../Hearts/Hearts\";\n// import Spades from \"../Spades/Spades\";\n\n\n\nconst Scores = () => {\n    // const currentGame = JSON.parse(localStorage.getItem(\"game\"));\n    \n    const currPlayer1 = JSON.parse(localStorage.getItem(\"player1\"));\n    const [player1, setPlayer1] = useState(currPlayer1 || {id: 1, name: \"\"});\n\n    const currPlayer2 = JSON.parse(localStorage.getItem(\"player2\"));\n    const [player2, setPlayer2] = useState(currPlayer2 || {id: 2, name: \"\"});\n\n    const currPlayer3 = JSON.parse(localStorage.getItem(\"player3\"));\n    const [player3, setPlayer3] = useState(currPlayer3 || {id: 3, name: \"\"});\n\n    const currPlayer4 = JSON.parse(localStorage.getItem(\"player4\"));\n    const [player4, setPlayer4] = useState(currPlayer4 || {id: 4, name: \"\"});\n\n    const currAllScores = JSON.parse(localStorage.getItem(\"allScores\"));\n    const [allScores, setAllScores] = useState(currAllScores || []);\n\n    ///////////////////////////\n    const currAllIndicators = JSON.parse(localStorage.getItem(\"allIndicators\"));\n    const [allIndicators, setAllIndicators] = useState(currAllIndicators || []);\n\n    ///////////////////////////\n    const currAllPenalties = JSON.parse(localStorage.getItem(\"allPenalties\"));\n    const [allPenalties, setAllPenalties] = useState(currAllPenalties || []);\n    \n    const currHandNum = JSON.parse(localStorage.getItem(\"handNum\"));\n    const [handNum, setHandNum] = useState(currHandNum || 0);\n\n    // const currScores = JSON.parse(localStorage.getItem(\"scores\"));\n    // const [scores, setScores] = useState(currScores || []);\n\n    // const currSuit = JSON.parse(localStorage.getItem(\"suit\"));\n    // const [suit, setSuit] = useState(currSuit || {suitName: \"hearts\", value: \"5\", color: \"red\"});\n\n    const currHandStorage = JSON.parse(localStorage.getItem(\"currHand\"));\n    const [currHand, setCurrHand] = useState(currHandStorage || {\n        suit: {\n            name: \"choose\",\n            normalWinnerPlayerDecrement: 0,\n            normalOpponentMultiplyer: 0,\n            opponentMultiplyer: 0,\n            kafaWinnerPlayerDecrement: 0,\n            kafaOpponentMultiplyer: 0,\n            color: \"\"\n        },\n        scores: [\"\", \"\", \"\", \"\"],\n        indicators: [0, 0, 0, 0],\n        penalties: [\"\", \"\", \"\", \"\"],\n    });\n\n    const currTotalScores = JSON.parse(localStorage.getItem(\"totalScores\"));\n    const [totalScores, setTotalScores] = useState(currTotalScores || [\n        {\n            id: 1,\n            name: player1,\n            score: \"\"\n        },\n        {\n            id: 2,\n            name: player2,\n            score: \"\"\n        },\n        {\n            id: 3,\n            name: player3,\n            score: \"\"\n        },\n        {\n            id: 4,\n            name: player4,\n            score: \"\"\n        }\n    ]);\n\n    const currLeaderBoard = JSON.parse(localStorage.getItem(\"leaderBoard\"));\n    const [leaderBoard, setLeaderBoard] = useState(currLeaderBoard || []);\n\n    useEffect(() => {\n        localStorage.setItem(\"handNum\", JSON.stringify(handNum));\n    }, [handNum]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"player1\", JSON.stringify(player1));\n    }, [player1]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"player2\", JSON.stringify(player2));\n    }, [player2]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"player3\", JSON.stringify(player3));\n    }, [player3]);\n\n    useEffect(() => {\n        localStorage.setItem(\"player4\", JSON.stringify(player4));\n    }, [player4]);\n\n    // useEffect(() => {\n    //     localStorage.setItem(\"scores\", JSON.stringify(scores));\n    // }, [scores]);\n\n    useEffect(() => {\n        localStorage.setItem(\"currHand\", JSON.stringify(currHand));\n    }, [currHand]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"allScores\", JSON.stringify(allScores));\n    }, [allScores]);\n\n    /////////////////////\n    useEffect(() => {\n        localStorage.setItem(\"allIndicators\", JSON.stringify(allIndicators));\n    }, [allIndicators]);\n\n    ////////////////////\n    useEffect(() => {\n        localStorage.setItem(\"allPenalties\", JSON.stringify(allPenalties));\n    }, [allPenalties]);\n\n    useEffect(() => {\n        localStorage.setItem(\"totalScores\", JSON.stringify(totalScores));\n    }, [totalScores]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"leaderBoard\", JSON.stringify(leaderBoard));\n    }, [leaderBoard]);\n\n\n    useEffect(() => {\n        let player1TotalScore = 0;\n        allScores.forEach(\n            _scores => {\n                return player1TotalScore += parseInt((_scores[0] === \"\") ? 0 : _scores[0]);\n            }\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player1TotalScore += parseInt((_indicators[0] === \"\") ? 0 : _indicators[0]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player1TotalScore += parseInt((_penalties[0] === \"\") ? 0 : _penalties[0]);\n            }\n        );\n        \n        let player2TotalScore = 0;\n        allScores.forEach(\n            _scores => player2TotalScore += parseInt((_scores[1] === \"\") ? 0 : _scores[1])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player2TotalScore += parseInt((_indicators[1] === \"\") ? 0 : _indicators[1]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player2TotalScore += parseInt((_penalties[1] === \"\") ? 0 : _penalties[1]);\n            }\n        );\n\n        let player3TotalScore = 0;\n        allScores.forEach(\n            _scores => player3TotalScore += parseInt((_scores[2] === \"\") ? 0 : _scores[2])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player3TotalScore += parseInt((_indicators[2] === \"\") ? 0 : _indicators[2]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player3TotalScore += parseInt((_penalties[2] === \"\") ? 0 : _penalties[2]);\n            }\n        );\n\n        let player4TotalScore = 0;\n        allScores.forEach(\n            _scores => player4TotalScore += parseInt((_scores[3] === \"\") ? 0 : _scores[3])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player4TotalScore += parseInt((_indicators[3] === \"\") ? 0 : _indicators[3]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player4TotalScore += parseInt((_penalties[3] === \"\") ? 0 : _penalties[3]);\n            }\n        );\n\n        setTotalScores(() => {\n            return [\n                {\n                    id: player1.id,\n                    name: player1.name,\n                    score: player1TotalScore\n                        || (player2TotalScore && player3TotalScore && player4TotalScore && \"0\")\n                        || \"\"\n                },\n                {\n                    id: player2.id,\n                    name: player2.name,\n                    score: player2TotalScore\n                    || (player1TotalScore && player3TotalScore && player4TotalScore && \"0\")\n                    || \"\"\n                },\n                {\n                    id: player3.id,\n                    name: player3.name,\n                    score: player3TotalScore\n                    || (player1TotalScore && player2TotalScore && player4TotalScore && \"0\")\n                    || \"\"\n                },\n                {\n                    id: player4.id,\n                    name: player4.name,\n                    score: player4TotalScore\n                    || (player1TotalScore && player2TotalScore && player3TotalScore && \"0\")\n                    || \"\"\n                },\n            ];\n        });      \n    }, [allScores, allIndicators, allPenalties, player1, player2, player3, player4]);\n\n    useEffect(() => {\n        const tempTotalScores = [...totalScores];\n        const sortedTotalScores = tempTotalScores.sort(\n            (a, b) => a.score - b.score\n        ); \n        setLeaderBoard(() => sortedTotalScores);\n    }, [totalScores]);\n\n    // useEffect(() => {\n    //     localStorage.setItem(\"suit\", JSON.stringify(suit));\n    // }, [suit])\n\n    const handleSetPlayer1 = (e) => {\n        setPlayer1(() => ({id: 1, name: e.target.value}));\n    }\n    \n    const handleSetPlayer2 = (e) => {\n        setPlayer2(() => ({id: 2, name: e.target.value}));\n    }\n    \n    const handleSetPlayer3 = (e) => {\n        setPlayer3(() => ({id: 3, name: e.target.value}));\n    }\n\n    const handleSetPlayer4 = (e) => {\n        setPlayer4(() => ({id: 4, name: e.target.value}));\n    }\n\n    const handleSelectSuit = (e) => {\n        let normalWinnerPlayerDecrement = 0;\n        let normalOpponentMultiplyer = 0;\n        let kafaWinnerPlayerDecrement = 0;\n        let kafaOpponentMultiplyer = 0;\n\n        switch (e.target[e.target.selectedIndex].id) {\n            case \"hearts\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 5;\n                kafaWinnerPlayerDecrement = -500;\n                kafaOpponentMultiplyer = 10\n                break;\n            case \"diamonds\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 4;\n                kafaWinnerPlayerDecrement = -400;\n                kafaOpponentMultiplyer = 8\n                break;\n            case \"spades\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 3;\n                kafaWinnerPlayerDecrement = -300;\n                kafaOpponentMultiplyer = 6\n                break;\n            case \"clubs\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 2;\n                kafaWinnerPlayerDecrement = -200;\n                kafaOpponentMultiplyer = 4\n                break;\n            default:\n                normalWinnerPlayerDecrement = 0;\n                normalOpponentMultiplyer = 0;\n                kafaWinnerPlayerDecrement = 0;\n                kafaOpponentMultiplyer = 0;\n                break;\n        }\n        const tempCurrHand = {...currHand}\n        tempCurrHand.suit.name = e.target[e.target.selectedIndex].id;\n        tempCurrHand.suit.normalWinnerPlayerDecrement = normalWinnerPlayerDecrement;\n        tempCurrHand.suit.normalOpponentMultiplyer = normalOpponentMultiplyer;\n        tempCurrHand.suit.kafaWinnerPlayerDecrement = kafaWinnerPlayerDecrement;\n        tempCurrHand.suit.kafaOpponentMultiplyer = kafaOpponentMultiplyer;\n        tempCurrHand.suit.color = e.target[e.target.selectedIndex].dataset.color;\n        setCurrHand(() => tempCurrHand);\n    }\n\n    const addScore = () => {\n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (currHand.scores[i] === \"\" || currHand.suit.name === \"choose\") {\n                return;\n            }\n        }\n\n        const tempScores = [...currHand.scores];\n\n        currHand.scores.forEach(\n            (score, i) => {\n                if (currHand.scores.indexOf(\"-\") > -1) {\n                    if (score === \"-\") {\n                        tempScores[i] = currHand.suit.normalWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = tempScores[i] * currHand.suit.normalOpponentMultiplyer;\n                    }\n                }\n                if (currHand.scores.includes(\"x\") || currHand.scores.includes(\"X\")) {\n                    if (score.toLowerCase() === \"x\") {\n                        tempScores[i] = currHand.suit.kafaWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = tempScores[i] * currHand.suit.kafaOpponentMultiplyer;\n                    }\n                }\n                if (currHand.scores.includes(\"xx\") || currHand.scores.includes(\"XX\")) {\n                    if (score.toLowerCase() === \"xx\") {\n                        tempScores[i] = 2 * currHand.suit.kafaWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = 2 * tempScores[i] * currHand.suit.kafaOpponentMultiplyer;\n                    }\n                }\n                \n            }\n        );\n         \n        setAllScores(prevScores => [...prevScores, tempScores]);\n        setAllIndicators(prevIndicators => [...prevIndicators, currHand.indicators]);\n        setAllPenalties(prevPenalties => [...prevPenalties, currHand.penalties]);\n\n        setCurrHand(() => (\n            {\n                suit: {\n                    name: \"choose\",\n                    normalWinnerPlayerDecrement: 0,\n                    normalOpponentMultiplyer: 0,\n                    opponentMultiplyer: 0,\n                    kafaWinnerPlayerDecrement: 0,\n                    kafaOpponentMultiplyer: 0,\n                    color: \"\"\n                },\n                scores: [\"\", \"\", \"\", \"\"],\n                indicators: [0, 0, 0, 0],\n                penalties: [\"\", \"\", \"\", \"\"],\n            }\n        ));\n    }\n    \n    const isAllX = (someStr) => {\n        const splStr = someStr.split(\"\");\n        for (let i = 0; i < splStr.length; i++) {\n            if (splStr[i].toLowerCase() !== \"x\") {\n                return [false, splStr.length];\n            }\n        }\n        return [true, splStr.length];\n    }\n    \n    const isAllDash = (someStr) => {\n        const splStr = someStr.split(\"\");\n        for (let i = 0; i < splStr.length; i++) {\n            if (splStr[i].toLowerCase() !== \"-\") {\n                return [false, splStr.length];\n            }\n        }\n        return [true, splStr.length];\n    }\n\n    const xCount = (str) => {\n        let count = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str[i].toLowerCase() === \"x\") count++;\n        }\n        return count;\n    }\n    \n    const dashCount = (str) => {\n        let count = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str[i].toLowerCase() === \"-\") count++;\n        }\n        return count;\n    }\n    \n    const handleCurrScores = (e) => {\n        if (\n            isNaN(e.target.value)\n            && !isAllX(e.target.value)[0]\n            && e.target.value[0] !== \"-\"\n        ) return;\n        if (e.target.value[0] === \"-\" && e.target.value.length > 1) return;\n        if (\n            !isNaN(e.target.value)\n            && (parseInt(e.target.value) === 0)\n        ) return;\n        if (isAllX(e.target.value) && xCount(e.target.value.toLowerCase()) > 2) return;\n        if (isAllDash(e.target.value) && dashCount(e.target.value.toLowerCase()) > 1) return;\n\n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (i !== parseInt(e.target.dataset.i)) {\n                if (\n                    (currHand.scores[i].toLowerCase().includes(\"x\")\n                    || currHand.scores[i].toLowerCase().includes(\"-\"))\n                    && e.target.value.toLowerCase().includes(\"x\"))\n                    return;\n            }\n        }\n        \n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (i !== parseInt(e.target.dataset.i)) {\n                if (\n                    (currHand.scores[i].toLowerCase().includes(\"-\") \n                    ||currHand.scores[i].toLowerCase().includes(\"x\")) \n                    && e.target.value.toLowerCase().includes(\"-\")) \n                    return;\n            }\n        }\n        \n        const tempCurrHand = {...currHand};\n        tempCurrHand.scores[e.target.dataset.i] = e.target.value.toUpperCase();\n        setCurrHand(tempCurrHand);\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////\n    const handleCurrIndicator = (e) => {\n        const value = -currHand.suit.normalOpponentMultiplyer * 10;\n        const i = e.target.dataset.i;\n        const tempCurrHand = {...currHand};\n        tempCurrHand.indicators = [0, 0, 0, 0];\n        tempCurrHand.indicators[i] = value;\n        setCurrHand(tempCurrHand);\n    }\n    \n    ////////////////////////////////////////////////////////////////////////////\n    const handleCurrPenalties = (e) => {\n        const tempCurrHand = {...currHand};\n        const i = e.target.dataset.i;\n        if (isNaN(e.target.value)) return;\n        const value = parseInt(e.target.value);\n        tempCurrHand.penalties[i] = value;\n        setCurrHand(tempCurrHand);\n    }\n\n    const handleRowScores = (e) => {\n        const value = e.target.value;\n        // if (isNaN(value) && (value.length < 2 && value[0]!== \"-\")) return;\n        // if (\n        //     !isNaN(value)\n        //     && (parseInt(value) === 0)\n        // ) return;\n        if (value.indexOf(\" \") !== -1) return;\n        if (value[0] === \"0\") return;\n        if (\n            isNaN(value)\n            && (value[0] !== \"-\")\n        ) return;\n        if (value.length > 1 && isNaN(value)) return;\n\n        // if (isNaN(value[1])) return;\n\n        // if (value[1] === \"-\") return;\n\n        // if (value[0] === \"-\" && isNaN(value[1])) return;\n\n        // if (e.target.value[0] === \"-\" && e.target.value.length > 1) return;\n        const tempAllScores = [...allScores];\n        tempAllScores[e.target.dataset.i][e.target.dataset.j] = e.target.value;\n        setAllScores(tempAllScores);\n    }\n\n    const handleCellOnBlur = (e) => {\n        const tempAllScores = [...allScores];\n        (e.target.value === \"-\") && (tempAllScores[e.target.dataset.i][e.target.dataset.j] = \"\");\n        setAllScores(tempAllScores);\n    }\n    \n    const addNewHand = () => {\n        setHandNum(handNum + 1);\n        setAllScores([...allScores, [\"\", \"\", \"\", \"\"]]);\n    }\n\n    const clearAllScores = () => {\n        setAllScores(() => []);\n        setAllIndicators(() => []);\n        setAllPenalties(() => []);\n        setCurrHand(prevCurrHand => ({\n            ...prevCurrHand,\n            indicators: [0, 0, 0, 0],\n            penalties: [\"\", \"\", \"\", \"\"]\n        }));\n        setTotalScores(() => [\n            {\n                id: player1.id,\n                name: player1.name,\n                score: \"\"\n            },\n            {\n                id: player2.id,\n                name: player2.name,\n                score: \"\"\n            },\n            {\n                id: player3.id,\n                name: player3.name,\n                score: \"\"\n            },\n            {\n                id: player4.id,\n                name: player4.name,\n                score: \"\"\n            },\n        ]);\n    }\n\n    const clearAll = () => {\n        // localStorage.clear();\n        setAllScores(() => []);\n        setAllIndicators(() => []);\n        setAllPenalties(() => []);\n        setTotalScores(() => [\n            {\n                id: player1.id,\n                name: player1.name,\n                score: \"\"\n            },\n            {\n                id: player2.id,\n                name: player2.name,\n                score: \"\"\n            },\n            {\n                id: player3.id,\n                name: player3.name,\n                score: \"\"\n            },\n            {\n                id: player4.id,\n                name: player4.name,\n                score: \"\"\n            },\n        ]);\n\n        setCurrHand(() => (\n            {\n                suit: {\n                    name: \"choose\",\n                    normalWinnerPlayerDecrement: 0,\n                    normalOpponentMultiplyer: 0,\n                    opponentMultiplyer: 0,\n                    kafaWinnerPlayerDecrement: 0,\n                    kafaOpponentMultiplyer: 0,\n                    color: \"\"\n                },\n                scores: [\"\", \"\", \"\", \"\"],\n                indicators: [0, 0, 0, 0],\n                penalties: [\"\", \"\", \"\", \"\"],\n            }\n        ));\n        setPlayer1(() => ({id: 1, name: \"\"}));\n        setPlayer2(() => ({id: 2, name: \"\"}));\n        setPlayer3(() => ({id: 3, name: \"\"}));\n        setPlayer4(() => ({id: 4, name: \"\"}));\n    }\n\n    const clearCurrIndicators = () => {\n        const tempCurrHand = {...currHand};\n        tempCurrHand.indicators = [0, 0, 0, 0];\n        setCurrHand(tempCurrHand);\n    }\n\n    const clearCurrPenalties = () => {\n        const tempCurrHand = {...currHand};\n        tempCurrHand.penalties = [\"\", \"\", \"\", \"\"];\n        setCurrHand(tempCurrHand);\n    }\n\n    const mapPlaces = (placeNum) => {\n        let place = \"\";\n        switch (placeNum) {\n            case 1:\n                place = \"first\";\n                break;\n            case 2:\n                place = \"second\";\n                break;\n            case 3:\n                place = \"third\";\n                break;\n            case 4:\n                place = \"fourth\";\n                break;\n        \n            default:\n                place = \"none\";\n                break;\n        }\n        return place;\n    }\n\n\n    return ( \n        <article className=\"table-container\">\n            <table className=\"table\">\n                <thead className=\"players\">\n                    <tr>\n                        <td ></td>\n                        <td id=\"player1-name\" data-name=\"player1\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player1\"\n                                id=\"player1\" \n                                onChange={handleSetPlayer1}\n                                placeholder=\"Oyuncu 1\"\n                                value={player1.name}\n                                className={\n                                    ((totalScores[0].score !== \"\")\n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player1.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td id=\"player2-name\" data-name=\"player2\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player2\"\n                                id=\"player2\" \n                                onChange={handleSetPlayer2}\n                                placeholder=\"Oyuncu 2\"\n                                value={player2.name}\n                                className={\n                                    ((totalScores[1].score !== \"\")\n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player2.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td id=\"player3-name\" data-name=\"player3\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player3\"\n                                id=\"player3\" \n                                onChange={handleSetPlayer3}\n                                placeholder=\"Oyuncu 3\"\n                                value={player3.name}\n                                className={\n                                    ((totalScores[2].score !== \"\") \n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player3.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td id=\"player4-name\" data-name=\"player4\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player4\"\n                                id=\"player4\" \n                                onChange={handleSetPlayer4}\n                                placeholder=\"Oyuncu 4\"\n                                value={player4.name}\n                                className={\n                                    ((totalScores[3].score !== \"\") \n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player4.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody className=\"scores\">\n                    {allScores.map((row_scores, index) =>\n                        <ScoreRow\n                            key={index}\n                            row_scores={row_scores}\n                            allScores={allScores}\n                            hand={index + 1}\n                            i={index}\n                            handleRowScores={handleRowScores}\n                            handleCellOnBlur={handleCellOnBlur}\n                        />\n                    )}\n                    <tr className=\"total-scores\">\n                        <td>\n                            {/* <Trophy /> */}\n                            <Medal />\n                        </td>\n                        {/* <td>🏆</td> */}\n                        {totalScores.map((el, i) =>\n                            <td\n                                className={`player${i + 1}-total-score`}\n                                key={i}\n                            >\n                                {el.score}\n                            </td>\n                        )}\n                        <td></td>\n                    </tr>\n                    <tr className=\"empty-row\">\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    <tr className=\"add-scores\">\n                        <td id=\"suit\">\n                            <select\n                                name=\"suit\"\n                                id=\"select-suit\"\n                                onChange={handleSelectSuit}\n                                style={{color: `${currHand.suit.color}`}}\n                                value={currHand.suit.name}\n                            >\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">\n                                    &#xf078;\n                                </option> */}\n                                <option id=\"choose\" value=\"choose\" data-color=\"black\">🔻</option>\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">🂡</option> */}\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">\n                                    <ChevronDown />\n                                </option> */}\n                                <option id=\"hearts\" value=\"hearts\" data-color=\"red\">♥️️</option>\n                                <option id=\"diamonds\" value=\"diamonds\" data-color=\"red\">♦️</option>\n                                <option id=\"spades\" value=\"spades\" data-color=\"black\">♠️</option>\n                                <option id=\"clubs\" value=\"clubs\" data-color=\"black\">♣️</option>\n                            </select>\n                            \n                        </td>\n                        \n                        {currHand.scores.map(\n                            (score, i) => <td className=\"curr-hand_player-score\" key={i}>\n                                <input\n                                    type=\"text\"\n                                    // inputMode=\"numeric\"\n                                    // pattern=\"[0-9]*\"\n                                    name={`player${i + 1}-curr-score`}\n                                    id={`player${i + 1}-curr`}\n                                    value={score}\n                                    data-i={i}\n                                    onChange={handleCurrScores}\n                                />\n                            </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-add-score-row\"\n                                onClick={addScore}\n                            >\n                                {/* + */}\n                                <Plus />\n                            </button>\n                        </td>\n                    </tr>\n                    <tr className=\"indicators\">\n                        <td id=\"gosterge\">\n                            {/* <span id=\"gosterge-g-harfi\">🍒</span> */}\n                            <span id=\"gosterge-g-harfi\">G</span>\n                        </td>\n                        \n                        {currHand.indicators.map(\n                            (indicator, i) => <td key={i}>\n                                <input\n                                    type=\"radio\"\n                                    name=\"player-indicator\"\n                                    id={`player${i}-indicator`}\n                                    value={indicator}\n                                    data-i={i}\n                                    onChange={handleCurrIndicator}\n                                    checked={parseInt(indicator) !== 0}\n                                />\n                            </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-clear-curr-indicators\"\n                                onClick={clearCurrIndicators}\n                            >\n                                <Broom />\n                            </button>\n                        </td>\n                    </tr>\n                    <tr className=\"penalties\">\n                        <td id=\"penalty\">\n                            <span id=\"penalty-c-harfi\">C</span>\n                        </td>\n                        {currHand.penalties.map(\n                            (penalty, i) => <td className=\"curr-hand_player-penalty\" key={i}>\n                            <input\n                                type=\"text\"\n                                // inputMode=\"numeric\"\n                                // pattern=\"[0-9]*\"\n                                name={`player${i + 1}-curr-penalty`}\n                                id={`player${i + 1}-curr-penalty`}\n                                value={penalty || \"\"}\n                                data-i={i}\n                                onChange={handleCurrPenalties}\n                            />\n                        </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-clear-curr-penalties\"\n                                onClick={clearCurrPenalties}\n                            >\n                                <Broom />\n                            </button>\n                        </td>\n                    </tr>\n                </tbody> \n            </table>\n\n            <div className=\"buttons\">\n                <button\n                    className=\"btn btn-new-row\"\n                    onClick={addNewHand}\n                >\n                    Boş El &nbsp;\n                    <PlusSquare />\n                </button>\n                <button\n                    className=\"btn btn-clear-all-scores\"\n                    onClick={clearAllScores}\n                >\n                    Skorları &nbsp;\n                    <Trash />\n\n                </button>\n                <button\n                    className=\"btn btn-clear-all\"\n                    onClick={clearAll}\n                >\n                    Herşeyi &nbsp;\n                    <Trash />\n                </button>\n            </div> \n        </article>\n    );\n}\n\nexport default Scores;","import React from \"react\";\n\nimport \"./App.css\";\n\nimport Scores from \"./Scores/Scores\";\n// import SearchBar from \"./SearchBar/SearchBar\";\n// import Spinner from \"./Spinner/Spinner\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-h1\">Süper 81</h1> \n      </header>\n      <main className=\"main-content\">\n        <Scores />\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './normalize.css'\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}