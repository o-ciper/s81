{"version":3,"sources":["components/ScoreCell/ScoreCell.js","components/Broom/Broom.js","components/ScoreRow/ScoreRow.js","components/Trash/Trash.js","components/Plus/Plus.js","components/PlusSquare/PlusSquare.js","components/Medal/Medal.js","components/ScoreBoard/ScoreBoard.js","components/UserPlus/UserPlus.js","components/Scores/Scores.js","components/App.js","index.js"],"names":["ScoreCell","props","className","player","type","name","i","j","id","hand","value","score","onChange","handleRowScores","onBlur","handleCellOnBlur","parseInt","Broom","focusable","role","xmlns","viewBox","fill","d","ScoreRow","row_scores","map","index","allScores","onClick","e","handleClearRow","Trash","Plus","PlusSquare","Medal","ScoreBoard","leaderBoard","style","backgroundColor","UserPlus","Scores","currPlayer1","JSON","parse","localStorage","getItem","useState","player1","setPlayer1","currPlayer2","player2","setPlayer2","currPlayer3","player3","setPlayer3","currPlayer4","player4","setPlayer4","currAllScores","setAllScores","currAllIndicators","allIndicators","setAllIndicators","currHandNum","handNum","setHandNum","currHandStorage","suit","normalWinnerPlayerDecrement","normalOpponentMultiplyer","opponentMultiplyer","kafaWinnerPlayerDecrement","kafaOpponentMultiplyer","color","scores","indicators","currHand","setCurrHand","currTotalScores","totalScores","setTotalScores","currLeaderBoard","setLeaderBoard","currDiffs","diffs","setDiffs","useEffect","setItem","stringify","newDiffs","totalScore","length","player1TotalScore","forEach","_scores","_indicators","player2TotalScore","player3TotalScore","player4TotalScore","sortedTotalScores","sort","a","b","isAllX","someStr","splStr","split","toLowerCase","handleCurrScores","isNaN","target","str","count","xCount","isAllDash","dashCount","dataset","includes","tempCurrHand","toUpperCase","handleCurrIndicator","indexOf","tempAllScores","handleDeleteRow","updatedAllScores","filter","scoresRow","console","log","mapPlaces","placeNum","place","placeholder","el","selectedIndex","tempScores","prevScores","prevIndicators","indicator","checked","clear","window","location","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.563e8fff.chunk.js","sourcesContent":["import React from 'react'\n\nimport \"./ScoreCell.css\"\n\nexport default function ScoreCell(props) {\n  return (\n      <td\n        // className={`player${props.player} ${(parseInt(props.score) < 0) ? \"curr-hand-winner\" : \"\"}`}\n        className={`player${props.player} score-cell`}\n      >\n        <input\n          type=\"text\"\n          // min=\"0\"\n          // inputMode=\"numeric\"\n          // pattern=\"[0-9]*\"\n          name=\"\"\n          data-i={props.i}\n          data-j={props.j}\n          id={`player${props.player}-hand${props.hand}-score`}\n          value={props.score}\n          onChange={props.handleRowScores}\n          onBlur={props.handleCellOnBlur}\n          className={\n            (parseInt(props.score) < 0)\n            && (-parseInt(props.score) % 100) === 0\n            ? \"curr-hand-winner\" : \"\"\n          }\n        />\n      </td>\n  )\n}\n","import React from 'react';\nimport \"./Broom.css\";\n\nconst Broom = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"broom\" className=\"svg-inline--fa fa-broom fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\n      <path fill=\"currentColor\" d=\"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"></path>\n    </svg>\n  )\n}\n\nexport default Broom;","import React from 'react';\nimport ScoreCell from '../ScoreCell/ScoreCell';\n\nimport Broom from '../Broom/Broom';\n\nimport \"./ScoreRow.css\";\n\nexport default function ScoreRow(props) {\n  return (\n    <tr \n      className=\"score-row\"\n      // data-i={props.i}\n    >\n      <td>\n        <div className=\"hand\">\n          {props.hand}\n        </div>\n      </td>\n      {props.row_scores.map((score, index) =>\n          <ScoreCell\n            key={index}\n            score={score}\n            player={index + 1}\n            index={index}\n            hand={props.hand}\n            allScores={props.allScores}\n            i={props.i}\n            j={index}\n            handleRowScores={props.handleRowScores}\n            handleCellOnBlur={props.handleCellOnBlur}\n          />\n      )}\n      <td>\n          <button\n            className=\"btn btn-delete-row\"\n            // onClick={(e) => props.handleDeleteRow(e, props.i)}\n            onClick={(e) => props.handleClearRow(e, props.i)}\n          >\n              <Broom />\n          </button>\n      </td>\n    </tr>\n  )\n}\n","import React from 'react'\n\nimport \"./Trash.css\";\n\nconst Trash = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"trash-alt\" className=\"svg-inline--fa fa-trash-alt fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n      <path fill=\"currentColor\" d=\"M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z\"></path>\n    </svg>\n  )\n}\n\nexport default Trash;\n","import React from 'react';\nimport \"./Plus.css\";\n\nconst Plus = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"plus\" className=\"svg-inline--fa fa-plus fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n      <path fill=\"currentColor\" d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"></path>\n    </svg>\n  )\n}\n\nexport default Plus;","import React from 'react';\nimport \"./PlusSquare.css\";\n\nconst PlusSquare = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"plus-square\" className=\"svg-inline--fa fa-plus-square fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n      <path fill=\"currentColor\" d=\"M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"></path>\n    </svg>\n  )\n}\n\nexport default PlusSquare;","import React from \"react\";\nimport \"./Medal.css\";\n\nconst Medal = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"medal\" className=\"svg-inline--fa fa-medal fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <path fill=\"currentColor\" d=\"M223.75 130.75L154.62 15.54A31.997 31.997 0 0 0 127.18 0H16.03C3.08 0-4.5 14.57 2.92 25.18l111.27 158.96c29.72-27.77 67.52-46.83 109.56-53.39zM495.97 0H384.82c-11.24 0-21.66 5.9-27.44 15.54l-69.13 115.21c42.04 6.56 79.84 25.62 109.56 53.38L509.08 25.18C516.5 14.57 508.92 0 495.97 0zM256 160c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm92.52 157.26l-37.93 36.96 8.97 52.22c1.6 9.36-8.26 16.51-16.65 12.09L256 393.88l-46.9 24.65c-8.4 4.45-18.25-2.74-16.65-12.09l8.97-52.22-37.93-36.96c-6.82-6.64-3.05-18.23 6.35-19.59l52.43-7.64 23.43-47.52c2.11-4.28 6.19-6.39 10.28-6.39 4.11 0 8.22 2.14 10.33 6.39l23.43 47.52 52.43 7.64c9.4 1.36 13.17 12.95 6.35 19.59z\"></path>\n    </svg>\n  );\n}\n\nexport default Medal;","import React from 'react';\nimport \"./ScoreBoard.css\";\n// import ChevronDown from \"../ChevronDown/ChevronDown\";\n\nconst ScoreBoard = (props) => {\n  return (\n    <article className=\"leader-board\">\n      <div className=\"headings\">\n        <div className=\"places\">Sıralama</div>\n        <div className=\"cross-differences\">Skor Farkı</div>\n      </div>\n      <table className=\"score-board\">\n        <tbody>\n          {/* {props.leaderBoard.map((playerInfo, i) =>\n            <tr className=\"board-row\" key={i}>\n                <td>{i + 1}</td>\n                <td>{props.leaderBoard[i].name}</td>\n                <td>{playerInfo.score}</td>\n                <td>{i !== (props.leaderBoard.length - 1) && <ChevronDown />}</td>\n                <td>{props.diffs[i]}</td>\n            </tr>\n          )} */}\n          <tr className=\"board-row\" id=\"board-row-1\">\n              <td>1</td>\n              <td>{props.leaderBoard[0].name}</td>\n              <td>{props.leaderBoard[0].score}</td>\n              <td className=\"chevron\">\n                {/* <ChevronDown /> */}\n              </td>\n              <td className=\"opponent-differences\">\n                <span className=\"opponent\" style={{backgroundColor: \"rgb(124, 227, 250)\"}}>2.</span>\n                <span className=\"difference\">{props.leaderBoard[1].score - props.leaderBoard[0].score}</span>\n              </td>\n              <td className=\"opponent-differences\">\n                <span className=\"opponent\" style={{backgroundColor: \"rgb(255, 255, 53)\"}}>3.</span>\n                <span className=\"difference\">{props.leaderBoard[2].score - props.leaderBoard[0].score}</span>\n              </td>\n              <td className=\"opponent-differences\">\n                <span className=\"opponent\" style={{backgroundColor: \"rgb(255, 124, 124)\"}}>4.</span>\n                <span className=\"difference\">{props.leaderBoard[3].score - props.leaderBoard[0].score}</span>\n              </td>\n          </tr>\n          <tr className=\"board-row\" id=\"board-row-2\">\n              <td>2</td>\n              <td>{props.leaderBoard[1].name}</td>\n              <td>{props.leaderBoard[1].score}</td>\n              <td className=\"chevron\">\n                {/* <ChevronDown /> */}\n              </td>\n              <td className=\"opponent-differences\">\n                <span className=\"opponent\" style={{backgroundColor: \"rgb(255, 255, 53)\"}}>3.</span>\n                <span className=\"difference\">{props.leaderBoard[2].score - props.leaderBoard[1].score}</span>\n              </td>\n              <td className=\"opponent-differences\">\n                <span className=\"opponent\" style={{backgroundColor: \"rgb(255, 124, 124)\"}}>4.</span>\n                <span className=\"difference\">{props.leaderBoard[3].score - props.leaderBoard[1].score}</span>\n              </td>\n              <td className=\"opponent-differences\"></td>              \n          </tr>\n          <tr className=\"board-row\" id=\"board-row-3\">\n              <td>3</td>\n              <td>{props.leaderBoard[2].name}</td>\n              <td>{props.leaderBoard[2].score}</td>\n              <td className=\"chevron\">\n                {/* <ChevronDown /> */}\n              </td>\n              <td className=\"opponent-differences\">\n                <span className=\"opponent\" style={{backgroundColor: \"rgb(255, 124, 124)\"}}>4.</span>\n                <span className=\"difference\">{props.leaderBoard[3].score - props.leaderBoard[2].score}</span>\n              </td>\n              <td className=\"opponent-differences\"></td>\n              <td className=\"opponent-differences\"></td>\n          </tr>\n          <tr className=\"board-row\" id=\"board-row-4\">\n              <td>4</td>\n              <td>{props.leaderBoard[3].name}</td>\n              <td>{props.leaderBoard[3].score}</td>\n              <td className=\"chevron\"></td>\n              <td className=\"opponent-differences\"></td>\n              <td className=\"opponent-differences\"></td>\n              <td className=\"opponent-differences\"></td>\n          </tr>\n        </tbody>\n      </table>\n    </article>\n  )\n}\n\nexport default ScoreBoard;\n","import React from 'react'\n\nconst UserPlus = () => {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"user-plus\" className=\"svg-inline--fa fa-user-plus fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\n      <path fill=\"currentColor\" d=\"M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"></path>\n    </svg>\n  )\n}\n\nexport default UserPlus;\n","import React, {useEffect, useState} from \"react\";\n\nimport \"./Scores.css\";\n\nimport ScoreRow from \"../ScoreRow/ScoreRow\";\nimport Trash from \"../Trash/Trash\";\n// import ChevronDown from \"../Chevron-Down/ChevronDown\";\nimport Broom from \"../Broom/Broom\";\nimport Plus from \"../Plus/Plus\";\nimport PlusSquare from \"../PlusSquare/PlusSquare\";\n// import Trophy from \"../Trophy/Trophy\";\nimport Medal from \"../Medal/Medal\";\nimport ScoreBoard from \"../ScoreBoard/ScoreBoard\";\nimport UserPlus from \"../UserPlus/UserPlus\";\n// import Clubs from \"../Clubs/Clubs\";\n// import Diamonds from \"../Diamonds/Diamonds\";\n// import Hearts from \"../Hearts/Hearts\";\n// import Spades from \"../Spades/Spades\";\n\n\n\nconst Scores = () => {\n    // const currentGame = JSON.parse(localStorage.getItem(\"game\"));\n\n    const currPlayer1 = JSON.parse(localStorage.getItem(\"player1\"));\n    const [player1, setPlayer1] = useState(currPlayer1 || {id: 1, name: \"\"});\n\n    const currPlayer2 = JSON.parse(localStorage.getItem(\"player2\"));\n    const [player2, setPlayer2] = useState(currPlayer2 || {id: 2, name: \"\"});\n\n    const currPlayer3 = JSON.parse(localStorage.getItem(\"player3\"));\n    const [player3, setPlayer3] = useState(currPlayer3 || {id: 3, name: \"\"});\n\n    const currPlayer4 = JSON.parse(localStorage.getItem(\"player4\"));\n    const [player4, setPlayer4] = useState(currPlayer4 || {id: 4, name: \"\"});\n\n    const currAllScores = JSON.parse(localStorage.getItem(\"allScores\"));\n    const [allScores, setAllScores] = useState(currAllScores || []);\n\n    ///////////////////////////\n    const currAllIndicators = JSON.parse(localStorage.getItem(\"allIndicators\"));\n    const [allIndicators, setAllIndicators] = useState(currAllIndicators || []);\n\n    ///////////////////////////\n    // const currAllPenalties = JSON.parse(localStorage.getItem(\"allPenalties\"));\n    // const [allPenalties, setAllPenalties] = useState(currAllPenalties || []);\n\n    const currHandNum = JSON.parse(localStorage.getItem(\"handNum\"));\n    const [handNum, setHandNum] = useState(currHandNum || 0);\n\n    // const currScores = JSON.parse(localStorage.getItem(\"scores\"));\n    // const [scores, setScores] = useState(currScores || []);\n\n    // const currSuit = JSON.parse(localStorage.getItem(\"suit\"));\n    // const [suit, setSuit] = useState(currSuit || {suitName: \"hearts\", value: \"5\", color: \"red\"});\n\n    const currHandStorage = JSON.parse(localStorage.getItem(\"currHand\"));\n    const [currHand, setCurrHand] = useState(currHandStorage || {\n        suit: {\n            name: \"choose\",\n            normalWinnerPlayerDecrement: 0,\n            normalOpponentMultiplyer: 0,\n            opponentMultiplyer: 0,\n            kafaWinnerPlayerDecrement: 0,\n            kafaOpponentMultiplyer: 0,\n            color: \"\"\n        },\n        scores: [\"\", \"\", \"\", \"\"],\n        indicators: [0, 0, 0, 0],\n        // penalties: [\"\", \"\", \"\", \"\"],\n    });\n\n    const currTotalScores = JSON.parse(localStorage.getItem(\"totalScores\"));\n    const [totalScores, setTotalScores] = useState(currTotalScores || [\n        {\n            id: 1,\n            name: player1.name,\n            score: \"\"\n        },\n        {\n            id: 2,\n            name: player2.name,\n            score: \"\"\n        },\n        {\n            id: 3,\n            name: player3.name,\n            score: \"\"\n        },\n        {\n            id: 4,\n            name: player4.name,\n            score: \"\"\n        }\n    ]);\n\n    const currLeaderBoard = JSON.parse(localStorage.getItem(\"leaderBoard\"));\n    const [leaderBoard, setLeaderBoard] = useState(currLeaderBoard || [\n        {\n            id: 1,\n            name: player1.name,\n            score: \"\"\n        },\n        {\n            id: 2,\n            name: player2.name,\n            score: \"\"\n        },\n        {\n            id: 3,\n            name: player3.name,\n            score: \"\"\n        },\n        {\n            id: 4,\n            name: player4.name,\n            score: \"\"\n        }\n    ]);\n\n    const currDiffs = JSON.parse(localStorage.getItem(\"diffs\"));\n    const [diffs, setDiffs] = useState(currDiffs || [\"\", \"\", \"\", \"\"]);\n\n    useEffect(() => {\n        localStorage.setItem(\"handNum\", JSON.stringify(handNum));\n    }, [handNum]);\n\n    useEffect(() => {\n        localStorage.setItem(\"player1\", JSON.stringify(player1));\n    }, [player1]);\n\n    useEffect(() => {\n        localStorage.setItem(\"player2\", JSON.stringify(player2));\n    }, [player2]);\n\n    useEffect(() => {\n        localStorage.setItem(\"player3\", JSON.stringify(player3));\n    }, [player3]);\n\n    useEffect(() => {\n        localStorage.setItem(\"player4\", JSON.stringify(player4));\n    }, [player4]);\n\n    // useEffect(() => {\n    //     localStorage.setItem(\"scores\", JSON.stringify(scores));\n    // }, [scores]);\n\n    useEffect(() => {\n        localStorage.setItem(\"currHand\", JSON.stringify(currHand));\n    }, [currHand]);\n\n    useEffect(() => {\n        localStorage.setItem(\"allScores\", JSON.stringify(allScores));\n    }, [allScores]);\n\n    /////////////////////\n    useEffect(() => {\n        localStorage.setItem(\"allIndicators\", JSON.stringify(allIndicators));\n    }, [allIndicators]);\n\n    ////////////////////\n    // useEffect(() => {\n    //     localStorage.setItem(\"allPenalties\", JSON.stringify(allPenalties));\n    // }, [allPenalties]);\n\n    useEffect(() => {\n        localStorage.setItem(\"totalScores\", JSON.stringify(totalScores));\n    }, [totalScores]);\n\n    useEffect(() => {\n        localStorage.setItem(\"leaderBoard\", JSON.stringify(leaderBoard));\n    }, [leaderBoard]);\n\n    useEffect(() => {\n        localStorage.setItem(\"diffs\", JSON.stringify(diffs));\n    }, [diffs]);\n\n    useEffect(() => {\n        const newDiffs = leaderBoard.map((totalScore, i) => {\n            if ((i !== 0) && (i < leaderBoard.length))\n                return (leaderBoard[i].score - leaderBoard[i - 1].score);\n            return \"\";\n        });\n\n        setDiffs(() => newDiffs);\n    }, [leaderBoard]);\n\n\n    useEffect(() => {\n        let player1TotalScore = 0;\n        allScores.forEach(\n            _scores => {\n                return player1TotalScore += parseInt((_scores[0] === \"\") ? 0 : _scores[0]);\n            }\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player1TotalScore += parseInt((_indicators[0] === \"\") ? 0 : _indicators[0]);\n            }\n        );\n\n        // allPenalties.forEach(\n        //     _penalties => {\n        //         return player1TotalScore += parseInt((_penalties[0] === \"\") ? 0 : _penalties[0]);\n        //     }\n        // );\n\n        let player2TotalScore = 0;\n        allScores.forEach(\n            _scores => player2TotalScore += parseInt((_scores[1] === \"\") ? 0 : _scores[1])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player2TotalScore += parseInt((_indicators[1] === \"\") ? 0 : _indicators[1]);\n            }\n        );\n\n        // allPenalties.forEach(\n        //     _penalties => {\n        //         return player2TotalScore += parseInt((_penalties[1] === \"\") ? 0 : _penalties[1]);\n        //     }\n        // );\n\n        let player3TotalScore = 0;\n        allScores.forEach(\n            _scores => player3TotalScore += parseInt((_scores[2] === \"\") ? 0 : _scores[2])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player3TotalScore += parseInt((_indicators[2] === \"\") ? 0 : _indicators[2]);\n            }\n        );\n\n        // allPenalties.forEach(\n        //     _penalties => {\n        //         return player3TotalScore += parseInt((_penalties[2] === \"\") ? 0 : _penalties[2]);\n        //     }\n        // );\n\n        let player4TotalScore = 0;\n        allScores.forEach(\n            _scores => player4TotalScore += parseInt((_scores[3] === \"\") ? 0 : _scores[3])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player4TotalScore += parseInt((_indicators[3] === \"\") ? 0 : _indicators[3]);\n            }\n        );\n\n        // allPenalties.forEach(\n        //     _penalties => {\n        //         return player4TotalScore += parseInt((_penalties[3] === \"\") ? 0 : _penalties[3]);\n        //     }\n        // );\n\n        setTotalScores(() => {\n            return [\n                {\n                    id: player1.id,\n                    name: player1.name,\n                    score: player1TotalScore\n                        || (player2TotalScore && player3TotalScore && player4TotalScore && \"0\")\n                        || \"\"\n                },\n                {\n                    id: player2.id,\n                    name: player2.name,\n                    score: player2TotalScore\n                        || (player1TotalScore && player3TotalScore && player4TotalScore && \"0\")\n                        || \"\"\n                },\n                {\n                    id: player3.id,\n                    name: player3.name,\n                    score: player3TotalScore\n                        || (player1TotalScore && player2TotalScore && player4TotalScore && \"0\")\n                        || \"\"\n                },\n                {\n                    id: player4.id,\n                    name: player4.name,\n                    score: player4TotalScore\n                        || (player1TotalScore && player2TotalScore && player3TotalScore && \"0\")\n                        || \"\"\n                },\n            ];\n        });\n    }, [allScores, allIndicators, player1, player2, player3, player4]);\n    // }, [allScores, allIndicators, allPenalties, player1, player2, player3, player4]);\n\n    useEffect(() => {\n        const tempTotalScores = [...totalScores];\n        const sortedTotalScores = tempTotalScores.sort(\n            (a, b) => a.score - b.score\n        );\n        setLeaderBoard(() => sortedTotalScores);\n    }, [totalScores]);\n\n    // useEffect(() => {\n    //     localStorage.setItem(\"suit\", JSON.stringify(suit));\n    // }, [suit])\n\n    const handleSetPlayer1 = (e) => {\n        setPlayer1(() => ({id: 1, name: e.target.value}));\n    }\n\n    const handleSetPlayer2 = (e) => {\n        setPlayer2(() => ({id: 2, name: e.target.value}));\n    }\n\n    const handleSetPlayer3 = (e) => {\n        setPlayer3(() => ({id: 3, name: e.target.value}));\n    }\n\n    const handleSetPlayer4 = (e) => {\n        setPlayer4(() => ({id: 4, name: e.target.value}));\n    }\n\n    const handleSelectSuit = (e) => {\n        let normalWinnerPlayerDecrement = 0;\n        let normalOpponentMultiplyer = 0;\n        let kafaWinnerPlayerDecrement = 0;\n        let kafaOpponentMultiplyer = 0;\n\n        switch (e.target[e.target.selectedIndex].id) {\n            case \"hearts\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 5;\n                kafaWinnerPlayerDecrement = -500;\n                kafaOpponentMultiplyer = 10\n                break;\n            case \"diamonds\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 4;\n                kafaWinnerPlayerDecrement = -400;\n                kafaOpponentMultiplyer = 8\n                break;\n            case \"spades\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 3;\n                kafaWinnerPlayerDecrement = -300;\n                kafaOpponentMultiplyer = 6\n                break;\n            case \"clubs\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 2;\n                kafaWinnerPlayerDecrement = -200;\n                kafaOpponentMultiplyer = 4\n                break;\n            default:\n                normalWinnerPlayerDecrement = 0;\n                normalOpponentMultiplyer = 0;\n                kafaWinnerPlayerDecrement = 0;\n                kafaOpponentMultiplyer = 0;\n                break;\n        }\n        const tempCurrHand = {...currHand}\n        tempCurrHand.suit.name = e.target[e.target.selectedIndex].id;\n        tempCurrHand.suit.normalWinnerPlayerDecrement = normalWinnerPlayerDecrement;\n        tempCurrHand.suit.normalOpponentMultiplyer = normalOpponentMultiplyer;\n        tempCurrHand.suit.kafaWinnerPlayerDecrement = kafaWinnerPlayerDecrement;\n        tempCurrHand.suit.kafaOpponentMultiplyer = kafaOpponentMultiplyer;\n        tempCurrHand.suit.color = e.target[e.target.selectedIndex].dataset.color;\n        setCurrHand(() => tempCurrHand);\n    }\n\n    const addScore = () => {\n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (currHand.scores[i] === \"\" || currHand.suit.name === \"choose\") {\n                return;\n            }\n        }\n\n        const tempScores = [...currHand.scores];\n\n        currHand.scores.forEach(\n            (score, i) => {\n                if (currHand.scores.indexOf(\"-\") > -1) {\n                    if (score === \"-\") {\n                        tempScores[i] = currHand.suit.normalWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = tempScores[i] * currHand.suit.normalOpponentMultiplyer;\n                    }\n                } else if (currHand.scores.includes(\"x\") || currHand.scores.includes(\"X\")) {\n                    if (score.toLowerCase() === \"x\") {\n                        tempScores[i] = currHand.suit.kafaWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = tempScores[i] * currHand.suit.kafaOpponentMultiplyer;\n                    }\n                } else if (currHand.scores.includes(\"xx\") || currHand.scores.includes(\"XX\")) {\n                    if (score.toLowerCase() === \"xx\") {\n                        tempScores[i] = 2 * currHand.suit.kafaWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = 2 * tempScores[i] * currHand.suit.kafaOpponentMultiplyer;\n                    }\n                } else {\n                    tempScores[i] = tempScores[i] * currHand.suit.normalOpponentMultiplyer;\n                }\n\n            }\n        );\n\n        setAllScores(prevScores => [...prevScores, tempScores]);\n        setAllIndicators(prevIndicators => [...prevIndicators, currHand.indicators]);\n        // setAllPenalties(prevPenalties => [...prevPenalties, currHand.penalties]);\n\n        setCurrHand(() => (\n            {\n                suit: {\n                    name: \"choose\",\n                    normalWinnerPlayerDecrement: 0,\n                    normalOpponentMultiplyer: 0,\n                    opponentMultiplyer: 0,\n                    kafaWinnerPlayerDecrement: 0,\n                    kafaOpponentMultiplyer: 0,\n                    color: \"\"\n                },\n                scores: [\"\", \"\", \"\", \"\"],\n                indicators: [0, 0, 0, 0],\n                // penalties: [\"\", \"\", \"\", \"\"],\n            }\n        ));\n    }\n\n    const isAllX = (someStr) => {\n        const splStr = someStr.split(\"\");\n        for (let i = 0; i < splStr.length; i++) {\n            if (splStr[i].toLowerCase() !== \"x\") {\n                return [false, splStr.length];\n            }\n        }\n        return [true, splStr.length];\n    }\n\n    const isAllDash = (someStr) => {\n        const splStr = someStr.split(\"\");\n        for (let i = 0; i < splStr.length; i++) {\n            if (splStr[i].toLowerCase() !== \"-\") {\n                return [false, splStr.length];\n            }\n        }\n        return [true, splStr.length];\n    }\n\n    const xCount = (str) => {\n        let count = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str[i].toLowerCase() === \"x\") count++;\n        }\n        return count;\n    }\n\n    const dashCount = (str) => {\n        let count = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str[i].toLowerCase() === \"-\") count++;\n        }\n        return count;\n    }\n\n    const handleCurrScores = (e) => {\n        if (\n            isNaN(e.target.value)\n            && !isAllX(e.target.value)[0]\n            && e.target.value[0] !== \"-\"\n        ) return;\n        if (e.target.value[0] === \"-\" && e.target.value.length > 1) return;\n        if (\n            !isNaN(e.target.value)\n            && (parseInt(e.target.value) === 0)\n        ) return;\n        if (isAllX(e.target.value) && xCount(e.target.value.toLowerCase()) > 2) return;\n        if (isAllDash(e.target.value) && dashCount(e.target.value.toLowerCase()) > 1) return;\n\n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (i !== parseInt(e.target.dataset.i)) {\n                if (\n                    (currHand.scores[i].toLowerCase().includes(\"x\")\n                        || currHand.scores[i].toLowerCase().includes(\"-\"))\n                    && e.target.value.toLowerCase().includes(\"x\"))\n                    return;\n            }\n        }\n\n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (i !== parseInt(e.target.dataset.i)) {\n                if (\n                    (currHand.scores[i].toLowerCase().includes(\"-\")\n                        || currHand.scores[i].toLowerCase().includes(\"x\"))\n                    && e.target.value.toLowerCase().includes(\"-\"))\n                    return;\n            }\n        }\n\n        const tempCurrHand = {...currHand};\n        tempCurrHand.scores[e.target.dataset.i] = e.target.value.toUpperCase();\n        setCurrHand(tempCurrHand);\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////\n    const handleCurrIndicator = (e) => {\n        const value = -currHand.suit.normalOpponentMultiplyer * 10;\n        const i = e.target.dataset.i;\n        const tempCurrHand = {...currHand};\n        tempCurrHand.indicators = [0, 0, 0, 0];\n        tempCurrHand.indicators[i] = value;\n        setCurrHand(tempCurrHand);\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    // const handleCurrPenalties = (e) => {\n    //     const tempCurrHand = {...currHand};\n    //     const i = e.target.dataset.i;\n    //     if (isNaN(e.target.value)) return;\n    //     const value = parseInt(e.target.value);\n    //     tempCurrHand.penalties[i] = value;\n    //     setCurrHand(tempCurrHand);\n    // }\n\n    const handleRowScores = (e) => {\n        const value = e.target.value;\n        // if (isNaN(value) && (value.length < 2 && value[0]!== \"-\")) return;\n        // if (\n        //     !isNaN(value)\n        //     && (parseInt(value) === 0)\n        // ) return;\n        if (value.indexOf(\" \") !== -1) return;\n        if (value[0] === \"0\") return;\n        if (\n            isNaN(value)\n            && (value[0] !== \"-\")\n        ) return;\n        if (value.length > 1 && isNaN(value)) return;\n\n        // if (isNaN(value[1])) return;\n\n        // if (value[1] === \"-\") return;\n\n        // if (value[0] === \"-\" && isNaN(value[1])) return;\n\n        // if (e.target.value[0] === \"-\" && e.target.value.length > 1) return;\n        const tempAllScores = [...allScores];\n        tempAllScores[e.target.dataset.i][e.target.dataset.j] = e.target.value;\n        setAllScores(tempAllScores);\n    }\n\n    const handleDeleteRow = (e, index) => {\n        const tempAllScores = [...allScores];\n        const updatedAllScores = tempAllScores.filter(\n            (scoresRow, i) => i !== index\n        );\n        console.log(updatedAllScores);\n        setAllScores(() => updatedAllScores);\n    }\n\n    const handleClearRow = (e, index) => {\n        const tempAllScores = [...allScores];\n        const updatedAllScores = allScores.map(\n            (scoresRow, i) => {\n                if (i === index) {\n                    return tempAllScores[i] = [\"\", \"\", \"\", \"\"];\n                } else {\n                    return scoresRow;\n                }\n            }\n        );\n        setAllScores(() => updatedAllScores);\n    }\n\n    const handleCellOnBlur = (e) => {\n        const tempAllScores = [...allScores];\n        (e.target.value === \"-\") && (tempAllScores[e.target.dataset.i][e.target.dataset.j] = \"\");\n        setAllScores(tempAllScores);\n    }\n\n    const addNewHand = () => {\n        setHandNum(handNum + 1);\n        setAllScores([...allScores, [\"\", \"\", \"\", \"\"]]);\n    }\n\n    const clearAllScores = () => {\n        setAllScores(() => []);\n        setAllIndicators(() => []);\n        // setAllPenalties(() => []);\n        setCurrHand(() => ({\n            suit: {\n                name: \"choose\",\n                normalWinnerPlayerDecrement: 0,\n                normalOpponentMultiplyer: 0,\n                opponentMultiplyer: 0,\n                kafaWinnerPlayerDecrement: 0,\n                kafaOpponentMultiplyer: 0,\n                color: \"\"\n            },\n            scores: [\"\", \"\", \"\", \"\"],\n            indicators: [0, 0, 0, 0],\n            // penalties: [\"\", \"\", \"\", \"\"],\n        }));\n        setTotalScores(() => [\n            {\n                id: player1.id,\n                name: player1.name,\n                score: \"\"\n            },\n            {\n                id: player2.id,\n                name: player2.name,\n                score: \"\"\n            },\n            {\n                id: player3.id,\n                name: player3.name,\n                score: \"\"\n            },\n            {\n                id: player4.id,\n                name: player4.name,\n                score: \"\"\n            },\n        ]);\n    }\n\n    const clearAll = () => {\n        localStorage.clear();\n        // window.location.reload();\n        window.location = window.location.href;\n        // setAllScores(() => []);\n        // setAllIndicators(() => []);\n        // // setAllPenalties(() => []);\n        // setTotalScores(() => [\n        //     {\n        //         id: player1.id,\n        //         name: player1.name,\n        //         score: \"\"\n        //     },\n        //     {\n        //         id: player2.id,\n        //         name: player2.name,\n        //         score: \"\"\n        //     },\n        //     {\n        //         id: player3.id,\n        //         name: player3.name,\n        //         score: \"\"\n        //     },\n        //     {\n        //         id: player4.id,\n        //         name: player4.name,\n        //         score: \"\"\n        //     },\n        // ]);\n\n        // setCurrHand(() => (\n        //     {\n        //         suit: {\n        //             name: \"choose\",\n        //             normalWinnerPlayerDecrement: 0,\n        //             normalOpponentMultiplyer: 0,\n        //             opponentMultiplyer: 0,\n        //             kafaWinnerPlayerDecrement: 0,\n        //             kafaOpponentMultiplyer: 0,\n        //             color: \"\"\n        //         },\n        //         scores: [\"\", \"\", \"\", \"\"],\n        //         indicators: [0, 0, 0, 0],\n        //         penalties: [\"\", \"\", \"\", \"\"],\n        //     }\n        // ));\n        // setPlayer1(() => ({id: 1, name: \"\"}));\n        // setPlayer2(() => ({id: 2, name: \"\"}));\n        // setPlayer3(() => ({id: 3, name: \"\"}));\n        // setPlayer4(() => ({id: 4, name: \"\"}));\n    }\n\n    const clearCurrIndicators = () => {\n        const tempCurrHand = {...currHand};\n        tempCurrHand.indicators = [0, 0, 0, 0];\n        setCurrHand(tempCurrHand);\n    }\n\n    // const clearCurrPenalties = () => {\n    //     const tempCurrHand = {...currHand};\n    //     tempCurrHand.penalties = [\"\", \"\", \"\", \"\"];\n    //     setCurrHand(tempCurrHand);\n    // }\n\n    const mapPlaces = (placeNum) => {\n        let place = \"\";\n        switch (placeNum) {\n            case 1:\n                place = \"first\";\n                break;\n            case 2:\n                place = \"second\";\n                break;\n            case 3:\n                place = \"third\";\n                break;\n            case 4:\n                place = \"fourth\";\n                break;\n\n            default:\n                place = \"none\";\n                break;\n        }\n        return place;\n    }\n\n\n    return (\n        <article className=\"table-container\">\n            <table className=\"table\">\n                <thead className=\"players\">\n                    <tr>\n                        {/* <td>🧑</td> */}\n                        {/* <td>🧑🏻</td> */}\n                        <td><UserPlus /></td>\n                        <td id=\"player1-name\" data-name=\"player1\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player1\"\n                                id=\"player1\"\n                                onChange={handleSetPlayer1}\n                                placeholder=\"Oy 1\"\n                                value={player1.name}\n                                className={\n                                    ((totalScores[0].score !== \"\")\n                                        && mapPlaces(leaderBoard.map(el => el.id).indexOf(player1.id) + 1))\n                                    || \"\"\n                                }\n                            />\n                        </td>\n                        <td id=\"player2-name\" data-name=\"player2\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player2\"\n                                id=\"player2\"\n                                onChange={handleSetPlayer2}\n                                placeholder=\"Oy 2\"\n                                value={player2.name}\n                                className={\n                                    ((totalScores[1].score !== \"\")\n                                        && mapPlaces(leaderBoard.map(el => el.id).indexOf(player2.id) + 1))\n                                    || \"\"\n                                }\n                            />\n                        </td>\n                        <td id=\"player3-name\" data-name=\"player3\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player3\"\n                                id=\"player3\"\n                                onChange={handleSetPlayer3}\n                                placeholder=\"Oy 3\"\n                                value={player3.name}\n                                className={\n                                    ((totalScores[2].score !== \"\")\n                                        && mapPlaces(leaderBoard.map(el => el.id).indexOf(player3.id) + 1))\n                                    || \"\"\n                                }\n                            />\n                        </td>\n                        <td id=\"player4-name\" data-name=\"player4\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player4\"\n                                id=\"player4\"\n                                onChange={handleSetPlayer4}\n                                placeholder=\"Oy 4\"\n                                value={player4.name}\n                                className={\n                                    ((totalScores[3].score !== \"\")\n                                        && mapPlaces(leaderBoard.map(el => el.id).indexOf(player4.id) + 1))\n                                    || \"\"\n                                }\n                            />\n                        </td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody className=\"scores\">\n                    {allScores.map((row_scores, index) =>\n                        <ScoreRow\n                            key={index}\n                            row_scores={row_scores}\n                            allScores={allScores}\n                            hand={index + 1}\n                            i={index}\n                            handleRowScores={handleRowScores}\n                            handleCellOnBlur={handleCellOnBlur}\n                            handleDeleteRow={handleDeleteRow}\n                            handleClearRow={handleClearRow}\n                        />\n                    )}\n                    {allScores.length > 0 &&\n                        <tr className=\"total-scores\">\n                            <td className=\"medal-icon-container\">\n                                {/* <Trophy /> */}\n                                <Medal />\n                            </td>\n                            {/* <td>🏆</td> */}\n                            {totalScores.map((el, i) =>\n                                <td\n                                    id={`player${i + 1}-total-score`}\n                                    className=\"total-score\"\n                                    key={i}\n                                >\n                                    {el.score}\n                                </td>\n                            )}\n                            <td></td>\n                        </tr>}\n                    <tr className=\"empty-row\">\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    <tr className=\"add-scores\">\n                        <td id=\"suit\">\n                            <select\n                                name=\"suit\"\n                                id=\"select-suit\"\n                                onChange={handleSelectSuit}\n                                style={{color: `${currHand.suit.color}`}}\n                                value={currHand.suit.name}\n                            >\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">\n                                    &#xf078;\n                                </option> */}\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">▼</option> */}\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">&nbsp;El</option> */}\n                                <option id=\"choose\" value=\"choose\" data-color=\"black\">✋</option>\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">🂡</option> */}\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">\n                                    <ChevronDown />\n                                </option> */}\n                                <option id=\"hearts\" value=\"hearts\" data-color=\"red\">♥️️</option>\n                                <option id=\"diamonds\" value=\"diamonds\" data-color=\"red\">♦️</option>\n                                <option id=\"spades\" value=\"spades\" data-color=\"black\">♠️</option>\n                                <option id=\"clubs\" value=\"clubs\" data-color=\"black\">♣️</option>\n                            </select>\n\n                        </td>\n\n                        {currHand.scores.map(\n                            (score, i) => <td className=\"curr-hand_player-score\" key={i}>\n                                <input\n                                    type=\"text\"\n                                    // inputMode=\"numeric\"\n                                    // pattern=\"[0-9]*\"\n                                    name={`player${i + 1}-curr-score`}\n                                    id={`player${i + 1}-curr`}\n                                    value={score}\n                                    data-i={i}\n                                    onChange={handleCurrScores}\n                                />\n                            </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-add-score-row\"\n                                onClick={addScore}\n                            >\n                                {/* + */}\n                                <Plus />\n                                {/* ✏️ */}\n                                {/* 🖊️ */}\n                            </button>\n                        </td>\n                    </tr>\n                    <tr className=\"indicators\">\n                        <td id=\"gosterge\">\n                            {/* <span id=\"gosterge-g-harfi\">🍒</span> */}\n                            <span id=\"gosterge-g-harfi\">G</span>\n                        </td>\n\n                        {currHand.indicators.map(\n                            (indicator, i) => <td key={i}>\n                                <input\n                                    type=\"radio\"\n                                    name=\"player-indicator\"\n                                    id={`player${i}-indicator`}\n                                    value={indicator}\n                                    data-i={i}\n                                    onChange={handleCurrIndicator}\n                                    checked={parseInt(indicator) !== 0}\n                                />\n                            </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-clear-curr-indicators\"\n                                onClick={clearCurrIndicators}\n                            >\n                                <Broom />\n                            </button>\n                        </td>\n                    </tr>\n                    {/* <tr className=\"penalties\">\n                        <td id=\"penalty\">\n                            <span id=\"penalty-c-harfi\">C</span>\n                        </td>\n                        {currHand.penalties.map(\n                            (penalty, i) => <td className=\"curr-hand_player-penalty\" key={i}>\n                            <input\n                                type=\"text\"\n                                // inputMode=\"numeric\"\n                                // pattern=\"[0-9]*\"\n                                name={`player${i + 1}-curr-penalty`}\n                                id={`player${i + 1}-curr-penalty`}\n                                value={penalty || \"\"}\n                                data-i={i}\n                                onChange={handleCurrPenalties}\n                            />\n                        </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-clear-curr-penalties\"\n                                onClick={clearCurrPenalties}\n                            >\n                                <Broom />\n                            </button>\n                        </td>\n                    </tr> */}\n                </tbody>\n            </table>\n\n            <div className=\"buttons\">\n                <button\n                    className=\"btn btn-new-row\"\n                    onClick={addNewHand}\n                >\n                    Boş El &nbsp;\n                    <PlusSquare />\n                </button>\n                <button\n                    className=\"btn btn-clear-all-scores\"\n                    onClick={clearAllScores}\n                >\n                    Skorları &nbsp;\n                    <Trash />\n\n                </button>\n                <button\n                    className=\"btn btn-clear-all\"\n                    onClick={clearAll}\n                >\n                    Herşeyi &nbsp;\n                    <Trash />\n                </button>\n            </div>\n\n            <ScoreBoard leaderBoard={leaderBoard} diffs={diffs} />\n        </article>\n    );\n}\n\nexport default Scores;\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport Scores from \"./Scores/Scores\";\n// import SearchBar from \"./SearchBar/SearchBar\";\n// import Spinner from \"./Spinner/Spinner\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-h1\">Süper 81</h1> \n      </header>\n      <main className=\"main-content\">\n        <Scores />\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './normalize.css'\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}