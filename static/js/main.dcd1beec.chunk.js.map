{"version":3,"sources":["components/ScoreCell/ScoreCell.js","components/ScoreRow/ScoreRow.js","components/Scores/Scores.js","components/App.js","index.js"],"names":["ScoreCell","props","className","player","type","name","i","j","id","hand","value","score","onChange","handleRowScores","parseInt","ScoreRow","row_scores","map","index","allScores","Scores","currPlayer1","JSON","parse","localStorage","getItem","useState","player1","setPlayer1","currPlayer2","player2","setPlayer2","currPlayer3","player3","setPlayer3","currPlayer4","player4","setPlayer4","currAllScores","setAllScores","currAllIndicators","allIndicators","setAllIndicators","currAllPenalties","allPenalties","setAllPenalties","currHandNum","handNum","setHandNum","currHandStorage","suit","normalWinnerPlayerDecrement","normalOpponentMultiplyer","opponentMultiplyer","kafaWinnerPlayerDecrement","kafaOpponentMultiplyer","color","scores","indicators","penalties","currHand","setCurrHand","currTotalScores","totalScores","setTotalScores","currLeaderBoard","leaderBoard","setLeaderBoard","useEffect","setItem","stringify","player1TotalScore","forEach","_scores","_indicators","_penalties","player2TotalScore","player3TotalScore","player4TotalScore","sortedTotalScores","sort","a","b","isAllX","someStr","splStr","split","length","toLowerCase","handleCurrScores","e","isNaN","target","str","count","xCount","isAllDash","dashCount","dataset","includes","tempCurrHand","toUpperCase","handleCurrIndicator","handleCurrPenalties","indexOf","tempAllScores","mapPlaces","placeNum","place","placeholder","el","selectedIndex","style","onClick","tempScores","prevScores","prevIndicators","prevPenalties","indicator","checked","penalty","prevCurrHand","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcd1beec.chunk.js","sourcesContent":["import React from 'react'\n\nimport \"./ScoreCell.css\"\n\nexport default function ScoreCell(props) {\n  return (\n      <td\n        // className={`player${props.player} ${(parseInt(props.score) < 0) ? \"curr-hand-winner\" : \"\"}`}\n        className={`player${props.player} score-cell`}\n      >\n        <input\n          type=\"text\"\n          // min=\"0\"\n          // inputMode=\"numeric\"\n          // pattern=\"[0-9]*\"\n          name=\"\"\n          data-i={props.i}\n          data-j={props.j}\n          id={`player${props.player}-hand${props.hand}-score`}\n          value={props.score}\n          onChange={props.handleRowScores}\n          className={(parseInt(props.score) < 0) ? \"curr-hand-winner\" : \"\"}\n        />\n      </td>\n  )\n}\n","import React from 'react'\nimport ScoreCell from '../ScoreCell/ScoreCell'\n\nimport \"./ScoreRow.css\";\n\nexport default function ScoreRow(props) {\n  return (\n    <tr className=\"score-row\">\n      <td>\n        <div className=\"hand\">\n          {props.hand}\n        </div>\n      </td>\n      {props.row_scores.map((score, index) =>\n          <ScoreCell\n            key={index}\n            score={score}\n            player={index + 1}\n            index={index}\n            hand={props.hand}\n            allScores={props.allScores}\n            i={props.i}\n            j={index}\n            handleRowScores={props.handleRowScores}\n          />\n      )}\n      <td>\n          <button className=\"btn btn-delete-row\">\n              -\n          </button>\n      </td>\n    </tr>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport \"./Scores.css\";\n\nimport ScoreRow from \"../ScoreRow/ScoreRow\";\n\n\n\nconst Scores = () => {\n    // const currentGame = JSON.parse(localStorage.getItem(\"game\"));\n    \n    const currPlayer1 = JSON.parse(localStorage.getItem(\"player1\"));\n    const [player1, setPlayer1] = useState(currPlayer1 || {id: 1, name: \"\"});\n\n    const currPlayer2 = JSON.parse(localStorage.getItem(\"player2\"));\n    const [player2, setPlayer2] = useState(currPlayer2 || {id: 2, name: \"\"});\n\n    const currPlayer3 = JSON.parse(localStorage.getItem(\"player3\"));\n    const [player3, setPlayer3] = useState(currPlayer3 || {id: 3, name: \"\"});\n\n    const currPlayer4 = JSON.parse(localStorage.getItem(\"player4\"));\n    const [player4, setPlayer4] = useState(currPlayer4 || {id: 4, name: \"\"});\n\n    const currAllScores = JSON.parse(localStorage.getItem(\"allScores\"));\n    const [allScores, setAllScores] = useState(currAllScores || []);\n\n    ///////////////////////////\n    const currAllIndicators = JSON.parse(localStorage.getItem(\"allIndicators\"));\n    const [allIndicators, setAllIndicators] = useState(currAllIndicators || []);\n\n    ///////////////////////////\n    const currAllPenalties = JSON.parse(localStorage.getItem(\"allPenalties\"));\n    const [allPenalties, setAllPenalties] = useState(currAllPenalties || []);\n    \n    const currHandNum = JSON.parse(localStorage.getItem(\"handNum\"));\n    const [handNum, setHandNum] = useState(currHandNum || 0);\n\n    // const currScores = JSON.parse(localStorage.getItem(\"scores\"));\n    // const [scores, setScores] = useState(currScores || []);\n\n    // const currSuit = JSON.parse(localStorage.getItem(\"suit\"));\n    // const [suit, setSuit] = useState(currSuit || {suitName: \"hearts\", value: \"5\", color: \"red\"});\n\n    const currHandStorage = JSON.parse(localStorage.getItem(\"currHand\"));\n    const [currHand, setCurrHand] = useState(currHandStorage || {\n        suit: {\n            name: \"choose\",\n            normalWinnerPlayerDecrement: 0,\n            normalOpponentMultiplyer: 0,\n            opponentMultiplyer: 0,\n            kafaWinnerPlayerDecrement: 0,\n            kafaOpponentMultiplyer: 0,\n            color: \"\"\n        },\n        scores: [\"\", \"\", \"\", \"\"],\n        indicators: [0, 0, 0, 0],\n        penalties: [\"\", \"\", \"\", \"\"],\n    });\n\n    const currTotalScores = JSON.parse(localStorage.getItem(\"totalScores\"));\n    const [totalScores, setTotalScores] = useState(currTotalScores || [\n        {\n            id: 1,\n            name: player1,\n            score: \"\"\n        },\n        {\n            id: 2,\n            name: player2,\n            score: \"\"\n        },\n        {\n            id: 3,\n            name: player3,\n            score: \"\"\n        },\n        {\n            id: 4,\n            name: player4,\n            score: \"\"\n        }\n    ]);\n\n    const currLeaderBoard = JSON.parse(localStorage.getItem(\"leaderBoard\"));\n    const [leaderBoard, setLeaderBoard] = useState(currLeaderBoard || []);\n\n    useEffect(() => {\n        localStorage.setItem(\"handNum\", JSON.stringify(handNum));\n    }, [handNum]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"player1\", JSON.stringify(player1));\n    }, [player1]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"player2\", JSON.stringify(player2));\n    }, [player2]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"player3\", JSON.stringify(player3));\n    }, [player3]);\n\n    useEffect(() => {\n        localStorage.setItem(\"player4\", JSON.stringify(player4));\n    }, [player4]);\n\n    // useEffect(() => {\n    //     localStorage.setItem(\"scores\", JSON.stringify(scores));\n    // }, [scores]);\n\n    useEffect(() => {\n        localStorage.setItem(\"currHand\", JSON.stringify(currHand));\n    }, [currHand]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"allScores\", JSON.stringify(allScores));\n    }, [allScores]);\n\n    /////////////////////\n    useEffect(() => {\n        localStorage.setItem(\"allIndicators\", JSON.stringify(allIndicators));\n    }, [allIndicators]);\n\n    ////////////////////\n    useEffect(() => {\n        localStorage.setItem(\"allPenalties\", JSON.stringify(allPenalties));\n    }, [allPenalties]);\n\n    useEffect(() => {\n        localStorage.setItem(\"totalScores\", JSON.stringify(totalScores));\n    }, [totalScores]);\n    \n    useEffect(() => {\n        localStorage.setItem(\"leaderBoard\", JSON.stringify(leaderBoard));\n    }, [leaderBoard]);\n\n\n    useEffect(() => {\n        let player1TotalScore = 0;\n        allScores.forEach(\n            _scores => {\n                return player1TotalScore += parseInt((_scores[0] === \"\") ? 0 : _scores[0]);\n            }\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player1TotalScore += parseInt((_indicators[0] === \"\") ? 0 : _indicators[0]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player1TotalScore += parseInt((_penalties[0] === \"\") ? 0 : _penalties[0]);\n            }\n        );\n        \n        let player2TotalScore = 0;\n        allScores.forEach(\n            _scores => player2TotalScore += parseInt((_scores[1] === \"\") ? 0 : _scores[1])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player2TotalScore += parseInt((_indicators[1] === \"\") ? 0 : _indicators[1]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player2TotalScore += parseInt((_penalties[1] === \"\") ? 0 : _penalties[1]);\n            }\n        );\n\n        let player3TotalScore = 0;\n        allScores.forEach(\n            _scores => player3TotalScore += parseInt((_scores[2] === \"\") ? 0 : _scores[2])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player3TotalScore += parseInt((_indicators[2] === \"\") ? 0 : _indicators[2]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player3TotalScore += parseInt((_penalties[2] === \"\") ? 0 : _penalties[2]);\n            }\n        );\n\n        let player4TotalScore = 0;\n        allScores.forEach(\n            _scores => player4TotalScore += parseInt((_scores[3] === \"\") ? 0 : _scores[3])\n        );\n\n        allIndicators.forEach(\n            _indicators => {\n                return player4TotalScore += parseInt((_indicators[3] === \"\") ? 0 : _indicators[3]);\n            }\n        );\n\n        allPenalties.forEach(\n            _penalties => {\n                return player4TotalScore += parseInt((_penalties[3] === \"\") ? 0 : _penalties[3]);\n            }\n        );\n\n        setTotalScores(() => {\n            return [\n                {\n                    id: player1.id,\n                    name: player1.name,\n                    score: player1TotalScore\n                        || (player2TotalScore && player3TotalScore && player4TotalScore && \"0\")\n                        || \"\"\n                },\n                {\n                    id: player2.id,\n                    name: player2.name,\n                    score: player2TotalScore\n                    || (player1TotalScore && player3TotalScore && player4TotalScore && \"0\")\n                    || \"\"\n                },\n                {\n                    id: player3.id,\n                    name: player3.name,\n                    score: player3TotalScore\n                    || (player1TotalScore && player2TotalScore && player4TotalScore && \"0\")\n                    || \"\"\n                },\n                {\n                    id: player4.id,\n                    name: player4.name,\n                    score: player4TotalScore\n                    || (player1TotalScore && player2TotalScore && player3TotalScore && \"0\")\n                    || \"\"\n                },\n            ];\n        });      \n    }, [allScores, allIndicators, allPenalties, player1, player2, player3, player4]);\n\n    useEffect(() => {\n        const tempTotalScores = [...totalScores];\n        const sortedTotalScores = tempTotalScores.sort(\n            (a, b) => a.score - b.score\n        ); \n        setLeaderBoard(() => sortedTotalScores);\n    }, [totalScores]);\n\n    // useEffect(() => {\n    //     localStorage.setItem(\"suit\", JSON.stringify(suit));\n    // }, [suit])\n\n    const handleSetPlayer1 = (e) => {\n        setPlayer1(() => ({id: 1, name: e.target.value}));\n    }\n    \n    const handleSetPlayer2 = (e) => {\n        setPlayer2(() => ({id: 2, name: e.target.value}));\n    }\n    \n    const handleSetPlayer3 = (e) => {\n        setPlayer3(() => ({id: 3, name: e.target.value}));\n    }\n\n    const handleSetPlayer4 = (e) => {\n        setPlayer4(() => ({id: 4, name: e.target.value}));\n    }\n\n    const handleSelectSuit = (e) => {\n        let normalWinnerPlayerDecrement = 0;\n        let normalOpponentMultiplyer = 0;\n        let kafaWinnerPlayerDecrement = 0;\n        let kafaOpponentMultiplyer = 0;\n\n        switch (e.target[e.target.selectedIndex].id) {\n            case \"hearts\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 5;\n                kafaWinnerPlayerDecrement = -500;\n                kafaOpponentMultiplyer = 10\n                break;\n            case \"diamonds\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 4;\n                kafaWinnerPlayerDecrement = -400;\n                kafaOpponentMultiplyer = 8\n                break;\n            case \"spades\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 3;\n                kafaWinnerPlayerDecrement = -300;\n                kafaOpponentMultiplyer = 6\n                break;\n            case \"clubs\":\n                normalWinnerPlayerDecrement = -100;\n                normalOpponentMultiplyer = 2;\n                kafaWinnerPlayerDecrement = -200;\n                kafaOpponentMultiplyer = 4\n                break;\n            default:\n                normalWinnerPlayerDecrement = 0;\n                normalOpponentMultiplyer = 0;\n                kafaWinnerPlayerDecrement = 0;\n                kafaOpponentMultiplyer = 0;\n                break;\n        }\n        const tempCurrHand = {...currHand}\n        tempCurrHand.suit.name = e.target[e.target.selectedIndex].id;\n        tempCurrHand.suit.normalWinnerPlayerDecrement = normalWinnerPlayerDecrement;\n        tempCurrHand.suit.normalOpponentMultiplyer = normalOpponentMultiplyer;\n        tempCurrHand.suit.kafaWinnerPlayerDecrement = kafaWinnerPlayerDecrement;\n        tempCurrHand.suit.kafaOpponentMultiplyer = kafaOpponentMultiplyer;\n        tempCurrHand.suit.color = e.target[e.target.selectedIndex].dataset.color;\n        setCurrHand(() => tempCurrHand);\n    }\n\n    const addScore = () => {\n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (currHand.scores[i] === \"\" || currHand.suit.name === \"choose\") {\n                return;\n            }\n        }\n\n        const tempScores = [...currHand.scores];\n\n        currHand.scores.forEach(\n            (score, i) => {\n                if (currHand.scores.indexOf(\"-\") > -1) {\n                    if (score === \"-\") {\n                        tempScores[i] = currHand.suit.normalWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = tempScores[i] * currHand.suit.normalOpponentMultiplyer;\n                    }\n                }\n                if (currHand.scores.includes(\"x\") || currHand.scores.includes(\"X\")) {\n                    if (score.toLowerCase() === \"x\") {\n                        tempScores[i] = currHand.suit.kafaWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = tempScores[i] * currHand.suit.kafaOpponentMultiplyer;\n                    }\n                }\n                if (currHand.scores.includes(\"xx\") || currHand.scores.includes(\"XX\")) {\n                    if (score.toLowerCase() === \"xx\") {\n                        tempScores[i] = 2 * currHand.suit.kafaWinnerPlayerDecrement;\n                    } else {\n                        tempScores[i] = 2 * tempScores[i] * currHand.suit.kafaOpponentMultiplyer;\n                    }\n                }\n                \n            }\n        );\n         \n        setAllScores(prevScores => [...prevScores, tempScores]);\n        setAllIndicators(prevIndicators => [...prevIndicators, currHand.indicators]);\n        setAllPenalties(prevPenalties => [...prevPenalties, currHand.penalties]);\n\n        setCurrHand(() => (\n            {\n                suit: {\n                    name: \"choose\",\n                    normalWinnerPlayerDecrement: 0,\n                    normalOpponentMultiplyer: 0,\n                    opponentMultiplyer: 0,\n                    kafaWinnerPlayerDecrement: 0,\n                    kafaOpponentMultiplyer: 0,\n                    color: \"\"\n                },\n                scores: [\"\", \"\", \"\", \"\"],\n                indicators: [0, 0, 0, 0],\n                penalties: [\"\", \"\", \"\", \"\"],\n            }\n        ));\n    }\n    \n    const isAllX = (someStr) => {\n        const splStr = someStr.split(\"\");\n        for (let i = 0; i < splStr.length; i++) {\n            if (splStr[i].toLowerCase() !== \"x\") {\n                return [false, splStr.length];\n            }\n        }\n        return [true, splStr.length];\n    }\n    \n    const isAllDash = (someStr) => {\n        const splStr = someStr.split(\"\");\n        for (let i = 0; i < splStr.length; i++) {\n            if (splStr[i].toLowerCase() !== \"-\") {\n                return [false, splStr.length];\n            }\n        }\n        return [true, splStr.length];\n    }\n\n    const xCount = (str) => {\n        let count = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str[i].toLowerCase() === \"x\") count++;\n        }\n        return count;\n    }\n    \n    const dashCount = (str) => {\n        let count = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str[i].toLowerCase() === \"-\") count++;\n        }\n        return count;\n    }\n    \n    const handleCurrScores = (e) => {\n        if (\n            isNaN(e.target.value)\n            && !isAllX(e.target.value)[0]\n            && e.target.value[0] !== \"-\"\n        ) return;\n        if (e.target.value[0] === \"-\" && e.target.value.length > 1) return;\n        if (\n            !isNaN(e.target.value)\n            && (parseInt(e.target.value) === 0)\n        ) return;\n        if (isAllX(e.target.value) && xCount(e.target.value.toLowerCase()) > 2) return;\n        if (isAllDash(e.target.value) && dashCount(e.target.value.toLowerCase()) > 1) return;\n\n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (i !== parseInt(e.target.dataset.i)) {\n                if (\n                    (currHand.scores[i].toLowerCase().includes(\"x\")\n                    || currHand.scores[i].toLowerCase().includes(\"-\"))\n                    && e.target.value.toLowerCase().includes(\"x\"))\n                    return;\n            }\n        }\n        \n        for (let i = 0; i < currHand.scores.length; i++) {\n            if (i !== parseInt(e.target.dataset.i)) {\n                if (\n                    (currHand.scores[i].toLowerCase().includes(\"-\") \n                    ||currHand.scores[i].toLowerCase().includes(\"x\")) \n                    && e.target.value.toLowerCase().includes(\"-\")) \n                    return;\n            }\n        }\n        \n        const tempCurrHand = {...currHand};\n        tempCurrHand.scores[e.target.dataset.i] = e.target.value.toUpperCase();\n        setCurrHand(tempCurrHand);\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////\n    const handleCurrIndicator = (e) => {\n        const value = -currHand.suit.normalOpponentMultiplyer * 10;\n        const i = e.target.dataset.i;\n        const tempCurrHand = {...currHand};\n        tempCurrHand.indicators = [0, 0, 0, 0];\n        tempCurrHand.indicators[i] = value;\n        setCurrHand(tempCurrHand);\n    }\n    \n    ////////////////////////////////////////////////////////////////////////////\n    const handleCurrPenalties = (e) => {\n        const tempCurrHand = {...currHand};\n        const i = e.target.dataset.i;\n        if (isNaN(e.target.value)) return;\n        const value = parseInt(e.target.value);\n        tempCurrHand.penalties[i] = value;\n        setCurrHand(tempCurrHand);\n    }\n\n    const handleRowScores = (e) => {\n        const value = e.target.value;\n        // if (isNaN(value) && (value.length < 2 && value[0]!== \"-\")) return;\n        // if (\n        //     !isNaN(value)\n        //     && (parseInt(value) === 0)\n        // ) return;\n        if (value.indexOf(\" \") !== -1) return;\n        if (value[0] === \"0\") return;\n        if (\n            isNaN(value)\n            && (value[0] !== \"-\")\n        ) return;\n        if (value.length > 1 && isNaN(value)) return;\n\n        // if (isNaN(value[1])) return;\n\n        // if (value[1] === \"-\") return;\n\n        // if (value[0] === \"-\" && isNaN(value[1])) return;\n\n        // if (e.target.value[0] === \"-\" && e.target.value.length > 1) return;\n        const tempAllScores = [...allScores];\n        tempAllScores[e.target.dataset.i][e.target.dataset.j] = e.target.value;\n        setAllScores(tempAllScores);\n    }\n    \n    const addNewHand = () => {\n        setHandNum(handNum + 1);\n        setAllScores([...allScores, [\"\", \"\", \"\", \"\"]]);\n    }\n\n    const clearAllScores = () => {\n        setAllScores(() => []);\n        setAllIndicators(() => []);\n        setAllPenalties(() => []);\n        setCurrHand(prevCurrHand => ({\n            ...prevCurrHand,\n            indicators: [0, 0, 0, 0],\n            penalties: [\"\", \"\", \"\", \"\"]\n        }));\n        setTotalScores(() => [\n            {\n                id: player1.id,\n                name: player1.name,\n                score: \"\"\n            },\n            {\n                id: player2.id,\n                name: player2.name,\n                score: \"\"\n            },\n            {\n                id: player3.id,\n                name: player3.name,\n                score: \"\"\n            },\n            {\n                id: player4.id,\n                name: player4.name,\n                score: \"\"\n            },\n        ]);\n    }\n\n    const clearAll = () => {\n        // localStorage.clear();\n        setAllScores(() => []);\n        setAllIndicators(() => []);\n        setAllPenalties(() => []);\n        setTotalScores(() => [\n            {\n                id: player1.id,\n                name: player1.name,\n                score: \"\"\n            },\n            {\n                id: player2.id,\n                name: player2.name,\n                score: \"\"\n            },\n            {\n                id: player3.id,\n                name: player3.name,\n                score: \"\"\n            },\n            {\n                id: player4.id,\n                name: player4.name,\n                score: \"\"\n            },\n        ]);\n\n        setCurrHand(() => (\n            {\n                suit: {\n                    name: \"choose\",\n                    normalWinnerPlayerDecrement: 0,\n                    normalOpponentMultiplyer: 0,\n                    opponentMultiplyer: 0,\n                    kafaWinnerPlayerDecrement: 0,\n                    kafaOpponentMultiplyer: 0,\n                    color: \"\"\n                },\n                scores: [\"\", \"\", \"\", \"\"],\n                indicators: [0, 0, 0, 0],\n                penalties: [\"\", \"\", \"\", \"\"],\n            }\n        ));\n        setPlayer1(() => ({id: 1, name: \"\"}));\n        setPlayer2(() => ({id: 2, name: \"\"}));\n        setPlayer3(() => ({id: 3, name: \"\"}));\n        setPlayer4(() => ({id: 4, name: \"\"}));\n    }\n\n    const clearCurrIndicators = () => {\n        const tempCurrHand = {...currHand};\n        tempCurrHand.indicators = [0, 0, 0, 0];\n        setCurrHand(tempCurrHand);\n    }\n\n    const clearCurrPenalties = () => {\n        const tempCurrHand = {...currHand};\n        tempCurrHand.penalties = [\"\", \"\", \"\", \"\"];\n        setCurrHand(tempCurrHand);\n    }\n\n    const mapPlaces = (placeNum) => {\n        let place = \"\";\n        switch (placeNum) {\n            case 1:\n                place = \"first\";\n                break;\n            case 2:\n                place = \"second\";\n                break;\n            case 3:\n                place = \"third\";\n                break;\n            case 4:\n                place = \"fourth\";\n                break;\n        \n            default:\n                place = \"none\";\n                break;\n        }\n        return place;\n    }\n\n\n    return ( \n        <article className=\"table-container\">\n            <table className=\"table\">\n                <thead className=\"players\">\n                    <tr>\n                        <td ></td>\n                        <td id=\"player1-name\" data-name=\"player1\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player1\"\n                                id=\"player1\" \n                                onChange={handleSetPlayer1}\n                                placeholder=\"Oyuncu 1\"\n                                value={player1.name}\n                                className={\n                                    ((totalScores[0].score !== \"\")\n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player1.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td id=\"player2-name\" data-name=\"player2\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player2\"\n                                id=\"player2\" \n                                onChange={handleSetPlayer2}\n                                placeholder=\"Oyuncu 2\"\n                                value={player2.name}\n                                className={\n                                    ((totalScores[1].score !== \"\")\n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player2.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td id=\"player3-name\" data-name=\"player3\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player3\"\n                                id=\"player3\" \n                                onChange={handleSetPlayer3}\n                                placeholder=\"Oyuncu 3\"\n                                value={player3.name}\n                                className={\n                                    ((totalScores[2].score !== \"\") \n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player3.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td id=\"player4-name\" data-name=\"player4\" className=\"player\">\n                            <input\n                                type=\"text\"\n                                name=\"player4\"\n                                id=\"player4\" \n                                onChange={handleSetPlayer4}\n                                placeholder=\"Oyuncu 4\"\n                                value={player4.name}\n                                className={\n                                    ((totalScores[3].score !== \"\") \n                                    && mapPlaces(leaderBoard.map(el => el.id).indexOf(player4.id) + 1))\n                                    || \"\"\n                                }\n                            /> \n                        </td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody className=\"scores\">\n                    {allScores.map((row_scores, index) =>\n                        <ScoreRow\n                            key={index}\n                            row_scores={row_scores}\n                            allScores={allScores}\n                            hand={index + 1}\n                            i={index}\n                            handleRowScores={handleRowScores}\n                        />\n                    )}\n                    <tr className=\"total-scores\">\n                        {/* <td>➕</td> */}\n                        <td>➡️</td>\n                        {totalScores.map((el, i) =>\n                            <td\n                                className={`player${i + 1}-total-score`}\n                                key={i}\n                            >\n                                {el.score}\n                            </td>\n                        )}\n                        <td></td>\n                    </tr>\n                    <tr className=\"add-scores\">\n                        <td id=\"suit\">\n                            <select\n                                name=\"suit\"\n                                id=\"select-suit\"\n                                onChange={handleSelectSuit}\n                                style={{color: `${currHand.suit.color}`}}\n                                value={currHand.suit.name}\n                            >\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">⬇️</option> */}\n                                <option id=\"choose\" value=\"choose\" data-color=\"black\">🔻</option>\n                                {/* <option id=\"choose\" value=\"choose\" data-color=\"black\">🂡</option> */}\n                                <option id=\"hearts\" value=\"hearts\" data-color=\"red\">♥️️</option>\n                                <option id=\"diamonds\" value=\"diamonds\" data-color=\"red\">♦️</option>\n                                <option id=\"spades\" value=\"spades\" data-color=\"black\">♠️</option>\n                                <option id=\"clubs\" value=\"clubs\" data-color=\"black\">♣️</option>\n                            </select>\n                        </td>\n                        \n                        {currHand.scores.map(\n                            (score, i) => <td className=\"curr-hand_player-score\" key={i}>\n                                <input\n                                    type=\"text\"\n                                    // inputMode=\"numeric\"\n                                    // pattern=\"[0-9]*\"\n                                    name={`player${i + 1}-curr-score`}\n                                    id={`player${i + 1}-curr`}\n                                    value={score}\n                                    data-i={i}\n                                    onChange={handleCurrScores}\n                                />\n                            </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-add-score-row\"\n                                onClick={addScore}\n                            >\n                                +\n                            </button>\n                        </td>\n                    </tr>\n                    <tr className=\"indicators\">\n                        <td id=\"gosterge\">\n                            {/* <span id=\"gosterge-g-harfi\">🍒</span> */}\n                            <span id=\"gosterge-g-harfi\">G</span>\n                        </td>\n                        \n                        {currHand.indicators.map(\n                            (indicator, i) => <td key={i}>\n                                <input\n                                    type=\"radio\"\n                                    name=\"player-indicator\"\n                                    id={`player${i}-indicator`}\n                                    value={indicator}\n                                    data-i={i}\n                                    onChange={handleCurrIndicator}\n                                    checked={parseInt(indicator) !== 0}\n                                />\n                            </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-clear-curr-indicators\"\n                                onClick={clearCurrIndicators}\n                            >\n                                -\n                            </button>\n                        </td>\n                    </tr>\n                    <tr className=\"penalties\">\n                        <td id=\"penalty\">\n                            <span id=\"penalty-c-harfi\">C</span>\n                        </td>\n                        {currHand.penalties.map(\n                            (penalty, i) => <td className=\"curr-hand_player-penalty\" key={i}>\n                            <input\n                                type=\"text\"\n                                // inputMode=\"numeric\"\n                                // pattern=\"[0-9]*\"\n                                name={`player${i + 1}-curr-penalty`}\n                                id={`player${i + 1}-curr-penalty`}\n                                value={penalty || \"\"}\n                                data-i={i}\n                                onChange={handleCurrPenalties}\n                            />\n                        </td>\n                        )}\n                        <td>\n                            <button\n                                className=\"btn btn-clear-curr-penalties\"\n                                onClick={clearCurrPenalties}\n                            >\n                                -\n                            </button>\n                        </td>\n                    </tr>\n                </tbody> \n            </table>\n\n            <div className=\"buttons\">\n                <button\n                    className=\"btn btn-new-row\"\n                    onClick={addNewHand}\n                >\n                    Yeni El\n                </button>\n                <button\n                    className=\"btn btn-clear-all-scores\"\n                    onClick={clearAllScores}\n                    // onClick={}\n                >\n                    Skorları Temizle\n                </button>\n                <button\n                    className=\"btn btn-clear-all\"\n                    onClick={clearAll}\n                >\n                    Herşeyi Temizle\n                </button>\n            </div> \n        </article>\n    );\n}\n\nexport default Scores;","import React from \"react\";\n\nimport \"./App.css\";\n\nimport Scores from \"./Scores/Scores\";\n// import SearchBar from \"./SearchBar/SearchBar\";\n// import Spinner from \"./Spinner/Spinner\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-h1\">Süper 81</h1> \n      </header>\n      <main className=\"main-content\">\n        <Scores />\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './normalize.css'\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}